{"version":3,"file":"static/js/main.8bf88abb.js","mappings":"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","sources":["src/Global/Colors.js","src/features/User/userSlice.js","src/SQLite/index.js","src/Components/Header.jsx","src/Database/firebaseConfig.js","src/Services/shopServices.js","src/Components/Card.jsx","src/features/Shop/shopSlice.js","src/Components/CategoryItem.jsx","src/features/Counter/counterSlice.js","src/Components/Counter.jsx","src/Screens/Home.jsx","src/Components/ProductItem.jsx","src/Components/Search.jsx","src/Screens/ItemListCategory.jsx","src/features/Cart/cartSlice.js","src/Screens/ItemDetail.jsx","src/Navigation/ShopStack.jsx","src/Components/CartItem.jsx","src/Screens/Cart.jsx","src/Navigation/CartStack.jsx","src/Components/OrdenItem.jsx","src/Screens/OrderScreen.jsx","src/Navigation/OrderStack.jsx","src/Components/InputForm.jsx","src/Components/SubmitButton.jsx","src/Services/authServices.js","src/Validations/auth.js","src/Screens/SignupScreen.jsx","src/Screens/LoginScreen.jsx","src/Navigation/AuthStack.jsx","src/Components/AddButton.jsx","src/Screens/MyProfile.jsx","src/Screens/ImageSelector.jsx","src/Components/AddressItem.jsx","src/Screens/ListAddress.jsx","src/Components/MapPreview.jsx","src/Screens/LocationSelector.jsx","src/Navigation/MyProfileStack.jsx","src/Navigation/Navigator.jsx","src/Store/store.js","App.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["export const colors = {\n    red: \"#FF6666\",\n    peach: \"#FF8989\",\n    pink: \"#FCAEAE\",\n    lightPink: \"#FFEADD\"\n}","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\nexport const userSlice = createSlice({\r\n    name: \"User\",\r\n    initialState: {\r\n        value: {\r\n            email: \"\",\r\n            idToken: \"\",\r\n            localId: \"\",\r\n            profileImage: \"\",\r\n            location: {\r\n                latitude: \"\",\r\n                longitude: \"\"\r\n            },\r\n        }\r\n    },\r\n    reducers: {\r\n        setUser: (state, action) => {\r\n            state.value = action.payload\r\n        },\r\n        signOut: (state) => {\r\n            state.value = {\r\n                email: \"\",\r\n                idToken: \"\",\r\n                localId: \"\",\r\n                profileImage: \"\",\r\n                location: {\r\n                    latitude: \"\",\r\n                    longitude: \"\"\r\n                },\r\n            }\r\n        },\r\n        saveImage: (state, action) => {\r\n            state.value.profileImage = action.payload\r\n        },\r\n        setUserLocation: (state, action) => {\r\n            state.value.location = action.payload\r\n        }\r\n    }\r\n})\r\n\r\nexport const {\r\n    setUser, \r\n    signOut, \r\n    saveImage,\r\n    setUserLocation\r\n} = userSlice.actions\r\n\r\nexport default userSlice.reducer","import * as SQLite from 'expo-sqlite'\r\n\r\nconst db = SQLite.openDatabase('sessions.db')\r\n\r\nexport const init = () => {\r\n    const promise = new Promise((res, rej) => {\r\n        db.transaction(tx => {\r\n            tx.executeSql(\r\n                'CREATE TABLE IF NOT EXISTS sessions (localId TEXT PRIMARY KEY NOT NULL, email TEXT NOT NULL, idToken TEXT NOT NULL)',\r\n                [],\r\n                (_, result) => res(result),\r\n                (_, error) => rej(error)\r\n            )\r\n        })\r\n    })\r\n    return promise\r\n}\r\n\r\nexport const dropTableSessions = () => {\r\n    const promise = new Promise((res, rej) => {\r\n        db.transaction(tx => {\r\n            tx.executeSql(\r\n                'DROP TABLE IF EXISTS sessions ',\r\n                [],\r\n                (_, result) => res(result),\r\n                (_, error) => rej(error)\r\n            )\r\n        })\r\n    })\r\n    return promise\r\n}\r\n\r\nexport const insertSession = ({\r\n    email,\r\n    localId,\r\n    idToken\r\n}) => {\r\n    const promise = new Promise((resolve, reject) => {\r\n        db.transaction(tx => {\r\n            tx.executeSql(\r\n                'INSERT INTO sessions (email, localId, idToken) VALUES (?, ?, ?);',\r\n                [email, localId, idToken],\r\n                (_, result) => resolve(result),\r\n                (_, error) => reject(error)\r\n            )\r\n        })\r\n    })\r\n    return promise\r\n}\r\n\r\nexport const getSession = () => {\r\n    const promise = new Promise((acc, rej) => {\r\n        db.transaction(tx => {\r\n            tx.executeSql(\r\n                'SELECT * FROM sessions',\r\n                [],\r\n                (_, result) => acc(result),\r\n                (_, error) => rej(error)\r\n            )\r\n        })\r\n    })\r\n    return promise\r\n}\r\nexport const deleteSession = (localId) => {\r\n    const promise = new Promise((acc, rej) => {\r\n        db.transaction(tx => {\r\n            tx.executeSql(\r\n                'DELETE FROM sessions WHERE localId = ?',\r\n                [localId],\r\n                (_, result) => acc(result),\r\n                (_, error) => rej(error)\r\n            )\r\n        })\r\n    })\r\n    return promise\r\n}","import { Pressable, StyleSheet, Text, View } from \"react-native\";\nimport React from \"react\";\nimport { colors } from \"../Global/Colors\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport { SimpleLineIcons } from \"@expo/vector-icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { signOut } from \"../features/User/userSlice\";  \nimport { deleteSession } from \"../SQLite\";\n\nconst Header = ({ route, navigation }) => {\n    let title;\n    if (route.name === \"Home\") title = \"Home\";\n    else if (route.name === \"ItemListCategory\") title = route.params.category;\n    else if (route.name === \"Detail\") title = route.params.title;\n    else title = route.name;\n\n    const dispatch = useDispatch();\n    const { email, localId } = useSelector((state) => state.userReducer.value);\n\n    const onSignout = async () => {\n        try{\n            \n            console.log(\"deleting session...\")\n            const response = await deleteSession(localId)\n            dispatch(signOut())\n            console.log(\"session deleted:\")\n            console.log(response)\n        }\n        catch(error){\n            console.log(\"Error mientras sign out\")\n            console.log(error.message)\n        }\n    }\n\n    return (\n        <View style={styles.containerHeader}>\n            <Text style={styles.text}>{title}</Text>\n            {navigation.canGoBack() ? (\n                <Pressable\n                    style={styles.pressable}\n                    onPress={() => navigation.goBack()}\n                >\n                    <AntDesign name=\"back\" size={24} color=\"black\" />\n                </Pressable>\n            ) : null}\n            {email ? (\n                <Pressable\n                    style={styles.signOut}\n                    onPress={onSignout}\n                >\n                    <SimpleLineIcons name=\"logout\" size={24} color=\"black\" />\n                </Pressable>\n            ) : null}\n        </View>\n    );\n};\n\nexport default Header;\n\nconst styles = StyleSheet.create({\n    containerHeader: {\n        backgroundColor: colors.peach,\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        paddingVertical: 15,\n        position: \"relative\",\n    },\n    text: {\n        fontSize: 25,\n        // fontFamily: \"Ubuntu\",\n    },\n    pressable: {\n        position: \"absolute\",\n        right: 30,\n        top: \"50%\",\n    },\n    signOut: {\n        position: \"absolute\",\n        left: 30,\n        top: \"50%\",\n    },\n});\n// import { Pressable, StyleSheet, Text, View } from 'react-native'\n// import React from 'react'\n// import { colors } from '../Global/Colors'\n// import { AntDesign } from \"@expo/vector-icons\";\n\n// const Header =  ({ route, navigation })=> {\n//   let title\n//   if (route.name === 'Home') title = 'Home'\n//   if (route.name == 'ItemListCategory') title = route.params.category\n//   else if (route.name == 'ItemDetail') title = route.params.title\n//   else title = route.name\n//   return (\n//       <View style={styles.containerHeader}>\n//           <Text style={styles.text}>{title}</Text>\n//           {route.name !== \"Home\" ? (\n//               <Pressable\n//                   style={styles.pressable}\n//                   onPress={() => navigation.goBack()}\n//               >\n//                   <AntDesign name=\"back\" size={24} color=\"black\" />\n//               </Pressable>\n//           ) : null}\n//       </View>\n//   );\n// };\n\n// export default Header;\n\n// const styles = StyleSheet.create({\n//   containerHeader: {\n//       backgroundColor: colors.peach,\n//       flexDirection: \"row\",\n//       justifyContent: \"center\",\n//       alignItems: \"center\",\n//       paddingVertical: 25,\n//       position: \"relative\",\n//   },\n//   text: {\n//       fontSize: 25,\n//       fontFamily: \"Josefin\",\n//   },\n//   pressable: {\n//       position: \"absolute\",\n//       right: 30,\n//       top: \"50%\",\n//   },\n// });","export const realtime_database_url = 'https://ecommerce-43850-94509-default-rtdb.firebaseio.com/'\r\nexport const api_key = 'AIzaSyD0V8dx7X7BdH-dGi2rsSnqayHNvmTsEg8'\r\nexport const google_maps_api_key = 'AIzaSyDWHYn2WY2S8lwR85R15EbzuOi0i5ocjyc'\r\n \r\n\r\n \r\n\r\n// export const google_maps_api_key = 'AIzaSyD8oq6_0Gnfw34oU-1R4krgABk02VQNqTA'","import {createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\"\r\nimport { realtime_database_url } from \"../Database/firebaseConfig\"\r\n\r\nexport const shopApi = createApi({\r\n    reducerPath: 'shopApi',\r\n    baseQuery: fetchBaseQuery({baseUrl: realtime_database_url}),\r\n    endpoints: (builder) => ({\r\n        getCategories: builder.query({\r\n            query: () => `categories.json`\r\n        }),\r\n        getProducts: builder.query({\r\n            query: () => `products.json`\r\n        }),\r\n        getProductsByCategory: builder.query({\r\n            query: (category) => `products.json?orderBy=\"category\"&equalTo=\"${category}\"`,\r\n            transformResponse: (response) => {\r\n                const productsTransformed = Object.values(response)\r\n                return (productsTransformed)\r\n            }\r\n        }),\r\n        getProductById: builder.query({\r\n            query: (productId) => `products.json?orderBy=\"id\"&equalTo=${productId}`,\r\n            transformResponse: (response) => {\r\n                const productTransformed = Object.values(response).pop()\r\n                return (productTransformed)\r\n            }\r\n        }),\r\n        postCart: builder.mutation({\r\n            query: (order) => ({\r\n                url: `orders.json`,\r\n                method: `POST`,\r\n                body: order\r\n            })\r\n        }),\r\n        getProfileImage: builder.query({\r\n            query: (localId) => `profileImages/${localId}.json`,\r\n        }),\r\n        //Aquí hacemos un put para que no me genere ninguna clave nueva de por medio.\r\n        postProfileImage: builder.mutation({\r\n            query: ({image, localId}) => ({\r\n                url: `profileImages/${localId}.json`,\r\n                method: \"PUT\",\r\n                body: {\r\n                    image: image\r\n                },\r\n            }),\r\n        }),\r\n        getUserLocation: builder.query({\r\n            query: (localId) => `locations/${localId}.json`,\r\n        }),\r\n        postUserLocation: builder.mutation({\r\n            query: ({location, localId}) => ({\r\n                url: `locations/${localId}.json`,\r\n                method: \"PUT\",\r\n                body: {\r\n                    latitude: location.latitude,\r\n                    longitude: location.longitude,\r\n                    address: location.address\r\n                }\r\n            })\r\n        }),\r\n    })\r\n})\r\n\r\nexport const {\r\n    useGetCategoriesQuery, \r\n    useGetProductsQuery, \r\n    useGetProductsByCategoryQuery,\r\n    useGetProductByIdQuery,\r\n    usePostCartMutation,\r\n    useGetProfileImageQuery,\r\n    usePostProfileImageMutation,\r\n    useGetUserLocationQuery,\r\n    usePostUserLocationMutation,\r\n} = shopApi\r\n\r\n\r\n// import {createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\"\r\n// import { realtime_database_url } from \"../Database/firebaseConfig\"\r\n\r\n// export const shopApi = createApi({\r\n//     reducerPath: 'shopApi',\r\n//     baseQuery: fetchBaseQuery({baseUrl: realtime_database_url}),\r\n//     endpoints: (builder) => ({\r\n//         getCategories: builder.query({\r\n//             query: () => `categories.json`\r\n//         }),\r\n//         getProducts: builder.query({\r\n//             query: () => `products.json`\r\n//         }),\r\n//         getProductsByCategory: builder.query({\r\n//             query: (category) => `products.json?orderBy=\"category\"&equalTo=\"${category}\"`,\r\n//             transformResponse: (response) => {\r\n//                 const productsTransformed = Object.values(response)\r\n//                 return (productsTransformed)\r\n//             }\r\n//         }),\r\n//         getProductById: builder.query({\r\n//             query: (productId) => `products.json?orderBy=\"id\"&equalTo=${productId}`,\r\n//             transformResponse: (response) => {\r\n//                 const productTransformed = Object.values(response).pop()\r\n//                 return (productTransformed)\r\n//             }\r\n//         }),\r\n//         postCart: builder.mutation({\r\n//             query: (order) => ({\r\n//                 url: `orders.json`,\r\n//                 method: `POST`,\r\n//                 body: order\r\n//             })\r\n//         }),\r\n//         getProfileImage: builder.query({\r\n//             query: (localId) => `profileImages/${localId}.json`,\r\n//         }),\r\n//         //Aquí hacemos un put para que no me genere ninguna clave nueva de por medio.\r\n//         postProfileImage: builder.mutation({\r\n//             query: ({image, localId}) => ({\r\n//                 url: `profileImages/${localId}.json`,\r\n//                 method: \"PUT\",\r\n//                 body: {\r\n//                     image: image\r\n//                 },\r\n//             }),\r\n//         }),\r\n//     })\r\n// })\r\n\r\n// export const {\r\n//     useGetCategoriesQuery, \r\n//     useGetProductsQuery, \r\n//     useGetProductsByCategoryQuery,\r\n//     useGetProductByIdQuery,\r\n//     usePostCartMutation,\r\n//     useGetProfileImageQuery,\r\n//     usePostProfileImageMutation,\r\n// } = shopApi\r\n\r\n\r\n\r\n// import {createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\"\r\n// import { realtime_database_url } from \"../Database/firebaseConfig\"\r\n\r\n// export const shopApi = createApi({\r\n//     reducerPath: 'shopApi',\r\n//     baseQuery: fetchBaseQuery({baseUrl: realtime_database_url}),\r\n//     endpoints: (builder) => ({\r\n//         getCategories: builder.query({\r\n//             query: () => `categories.json`\r\n//         }),\r\n//        getProducts: builder.query({\r\n//             query: () => `products.json`\r\n//         }),\r\n//          getProductsByCategory: builder.query({\r\n//             query: (category) => `products.json?orderBy=\"category\"&equalTo=\"${category}\"`,\r\n//             transformResponse: (response) => {\r\n//                 console.log(response);\r\n//                 const productsTransformed = Object.values(response)\r\n//                 console.log(productsTransformed)\r\n//                 return (productsTransformed)\r\n//             }\r\n//         }),\r\n//         getProductById: builder.query({\r\n//             query: (productId) => `products.json?orderBy=\"id\"&equalTo=${productId}`,\r\n//             transformResponse: (response) => {\r\n//                 const productTransformed = Object.values(response).pop()\r\n//                 return (productTransformed)\r\n//             }\r\n//         }),\r\n//         postCart: builder.mutation({\r\n//             query: (order) => ({\r\n//                 url: `orders.json`,\r\n//                 method: `POST`,\r\n//                 body: order\r\n//             })\r\n//         }), \r\n//     })\r\n// })\r\n\r\n// export const {\r\n//     useGetCategoriesQuery, \r\n//     useGetProductsQuery, \r\n//     useGetProductsByCategoryQuery,\r\n//     useGetProductByIdQuery,\r\n//     usePostCartMutation,\r\n// } = shopApi","import { StyleSheet, Text, View } from 'react-native'\nimport React from 'react'\nimport { colors } from '../Global/Colors'\n\nconst Card = ({children, additionalStyle = []}) => {\n  return (\n    <View style = {[styles.cardContainer, additionalStyle]}>\n      {children}\n    </View>\n  )\n}\n\nexport default Card\n\nconst styles = StyleSheet.create({\n    cardContainer: {\n        height: 50,\n        width: 250,\n        shadowColor: \"#000\",\n        shadowOffset:{\n            width: 0,\n            height: 2,\n        },\n        shadowOpacity: 0.25,\n        shadowRadius: 3.84,\n        elevation: 8,\n        borderWidth: 2,\n        borderColor: 'black',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: colors.red,\n        marginVertical: 10,\n        borderRadius: 8,\n    }\n})","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport Products from '../../Data/products.json'\r\n\r\nexport const shopSlice = createSlice({\r\n    name: 'shop',\r\n    initialState: {\r\n        value: {\r\n            categorySelected : \"\",\r\n            idSelected: \"\", \r\n            allProducts: Products,\r\n            productsSelected : [], \r\n        }\r\n    },\r\n    reducers: {\r\n        setCategorySelected: (state, action)=>{\r\n            state.value.productsSelected = state.value.allProducts.filter(product => product.category === action.payload)\r\n            // productsRaw.filter(product => product.category === category && product.title.toLocaleLowerCase().includes(keyword.toLowerCase()))\r\n            state.value.categorySelected = action.payload\r\n        },\r\n        setIdSelected: (state,action) => {\r\n            state.value.idSelected = action.payload\r\n        }\r\n        // setProductIdSelected: (state, action)=>{\r\n        //     state.value.setpr = action.payload\r\n        // }, \r\n    }\r\n\r\n})\r\n\r\nexport const {setCategorySelected ,setIdSelected} = shopSlice.actions\r\n\r\nexport default shopSlice.reducer","import { Pressable, StyleSheet, Text, View, useWindowDimensions } from 'react-native'\nimport React from 'react'\nimport Card from './Card'\nimport { useDispatch } from 'react-redux'\nimport { setCategorySelected } from '../features/Shop/shopSlice'\n\nconst CategoryItem = ({\n  item,\n  navigation\n}) => {\n  const {width} = useWindowDimensions()\n\n  const dispatch = useDispatch()\n\n  const onSelectCategory = () => {\n    dispatch(setCategorySelected(item))\n    navigation.navigate('ItemListCategory', {category: item})\n  }\n  return (\n      <Pressable\n        onPress={onSelectCategory}\n      >\n        <Card\n          additionalStyle={styles.additionalStyle}\n        >\n            <Text style={styles.textCategory}>{item}</Text>\n        </Card>\n      </Pressable>\n  )\n}\n\nexport default CategoryItem\n\nconst styles = StyleSheet.create({\n\n    textCategory: {\n        fontSize: 18\n    },\n    additionalStyle: {\n      borderRadius: 15\n    }\n})\n\n// import { Pressable, StyleSheet, Text } from 'react-native'\n// import React from 'react'\n// import Card from './Card'\n// import { useDispatch } from 'react-redux'\n// import { setCategorySelected } from '../features/Shop/shopSlice'\n\n// const CategoryItem = ({\n//   item,\n//   navigation, route\n// }) => {\n\n//   const dispatch = useDispatch()\n\n//   const onSelectCategory = () => {\n//     dispatch(setCategorySelected(item))\n//     navigation.navigate('ItemListCategory' , {category: item} )\n//   }\n\n\n//   return (\n//     <Pressable\n//       onPress={onSelectCategory}>\n//       <Card>\n//           <Text style={styles.textCategory}>{item}</Text>\n//       </Card>\n//     </Pressable>\n//   )\n// }\n\n// export default CategoryItem\n\n// const styles = StyleSheet.create({\n//     textCategory: {\n//         fontSize: 18\n//     }\n// })","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const counterSlice = createSlice({\r\n    name: 'counter',\r\n    initialState: {\r\n        value: 1\r\n    },\r\n    reducers: {\r\n        increment: state=>{\r\n            state.value += 1\r\n        },\r\n        decrement: state=>{\r\n            state.value -= 1\r\n        },\r\n        incrementByAmount: (state, actions) =>{\r\n            state.value += actions.payload\r\n\r\n        },\r\n        reset: state=>{\r\n            state.value = 1 \r\n        },\r\n    }\r\n\r\n})\r\n\r\nexport const {increment , decrement,incrementByAmount ,reset} = counterSlice.actions\r\n\r\nexport default counterSlice.reducer","import { Pressable, StyleSheet, Text, TextInput, View } from \"react-native\";\r\nimport React, { useState } from \"react\";\r\nimport { colors } from \"../Global/Colors\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { decrement, increment, incrementByAmount, reset } from \"../features/Counter/counterSlice\";\r\n\r\nconst Counter = () => {\r\n    const [inputToAdd, setInputToAdd] = useState(\"0\");\r\n    // const [inputToAdd, setInputToAdd] = useState(0);\r\n\r\n    const dispatch = useDispatch()\r\n    const count = useSelector(state => state.counterReducer.value)\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n        <View style={styles.buttonsContainer}>\r\n            <Pressable \r\n            onPress={ () => dispatch(decrement())}\r\n            style={styles.button}\r\n            >\r\n                <Text style={styles.buttonText}>-</Text>\r\n            </Pressable>\r\n            <Text style={styles.span}>{count}</Text>\r\n            <Pressable \r\n            onPress={ () => dispatch(increment())}\r\n             style={styles.button}\r\n             >\r\n                <Text style={styles.buttonText}>+</Text>\r\n            </Pressable>\r\n        </View>\r\n        <View style={styles.buttonsContainer}>\r\n            <TextInput\r\n                placeholder=\"Cantidad a aumentar\"\r\n                style={styles.spanInput}\r\n                onChangeText={setInputToAdd}\r\n                value={inputToAdd}\r\n            />\r\n            <Pressable\r\n            onPress={ () => dispatch(incrementByAmount(+inputToAdd))}\r\n            style={styles.button}\r\n            >\r\n                <Text style={styles.buttonText}>Add</Text>\r\n            </Pressable>\r\n        </View>\r\n        <Pressable \r\n        onPress={ () => dispatch(reset())}\r\n        style={styles.button}\r\n        >\r\n            <Text style={styles.buttonText}>Reset</Text>\r\n        </Pressable>\r\n    </View>\r\n    );\r\n};\r\n\r\nexport default Counter;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        width: \"100%\",\r\n        backgroundColor: colors.pink,\r\n        padding: 10,\r\n    },\r\n    buttonsContainer: {\r\n        flexDirection: \"row\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        marginBottom: 10,\r\n    },\r\n    button: {\r\n        padding: 10,\r\n        backgroundColor: colors.lightPink,\r\n    },\r\n    span: {\r\n        backgroundColor: colors.red,\r\n        width: \"60%\",\r\n        padding: 10,\r\n        textAlign: \"center\",\r\n        fontSize: 20,\r\n    },\r\n    spanInput: {\r\n        backgroundColor: colors.peach,\r\n        width: \"60%\",\r\n        padding: 10,\r\n        textAlign: \"center\",\r\n        fontSize: 16,\r\n    },\r\n    buttonText: {\r\n        fontSize: 18,\r\n        fontFamily: \"Josefin\",\r\n    },\r\n});\r\n","import { FlatList, StyleSheet, Text, Platform, View, useWindowDimensions } from 'react-native'\nimport React from 'react'\nimport { colors } from '../Global/Colors'\n// import categories from '../Data/categories.json'\nimport { useGetCategoriesQuery } from '../Services/shopServices'\nimport CategoryItem from '../Components/CategoryItem'\nimport Counter from '../Components/Counter'\n\nconst Home = ({\n    // setCategorySelected\n    navigation, route\n}) => {\n  \n  const {width, height} = useWindowDimensions()\n  console.log(  \"tu dimencion es :  altura: \", height, \"Ancho: \" , width)\n  console.log ( \"tu plataforma es:\",  Platform.OS )\n  const {data: categories, isLoading, isError} = useGetCategoriesQuery()\n\n  console.log(\"cat\",categories);\n  console.log(\"loading\",isLoading);\n  console.log(\"err\",isError);\n  \n  return (\n    <View style={styles.container}>\n        <Counter/>\n        <FlatList\n           data = {categories}\n           keyExtractor={category => category}\n           renderItem={({item}) => <CategoryItem item={item} navigation = {navigation}/>}\n           showsVerticalScrollIndicator={false}\n           showsHorizontalScrollIndicator={false}\n           contentContainerStyle={styles.wrapper}\n           horizontal={true}\n           style={styles.flatlist}\n        />\n    </View>\n  )\n}\n\nexport default Home\n\nconst styles = StyleSheet.create({\n    wrapper: {\n        gap: 20,\n      },\n      container: {\n          backgroundColor: colors.lightPink,\n          alignItems: 'center',\n      },\n      flatlist: {\n        width: '80%'\n      }\n})","import { Image, Pressable, StyleSheet, Text, useWindowDimensions } from 'react-native'\nimport React from 'react'\nimport Card from './Card'\n\n\nconst ProductItem = ({ item , navigation }) => {\n\n  const { width, height } = useWindowDimensions()\n\n  const onSelect = (id) => {\n   navigation.navigate('ItemDetail', { item:item , productId: item.id} )\n  }\n\n  return (\n    <Pressable onPress={ () => onSelect(item.id)}>\n    <Card\n      additionalStyle={styles.additionalStylesCard}\n    >\n      <Text style={width > 350 ?  styles.textCategory : styles.textCategorySm}>{item.title}</Text>\n      <Image\n        resizeMode='cover'\n        style={styles.image}\n        source={{ uri: item.images[0] }}\n      />\n    </Card>\n    </Pressable>\n  )\n}\n\nexport default ProductItem\n\nconst styles = StyleSheet.create({\n  image: {\n    height: 120,\n    width: '40%',\n    minWidth: 150,\n    maxWidth: 250,\n    borderRadius: 8\n  },\n  textCategory: {\n    width: '50%',\n    fontSize: 22\n  },\n  textCategorySm: {\n    width: '50%',\n    fontSize: 15\n  },\n  additionalStylesCard: {\n    flexDirection: 'row',\n    height: 120,\n    justifyContent: 'space-between'\n  }\n})","import { Pressable, StyleSheet, Text, TextInput, View, useWindowDimensions } from 'react-native'\nimport React, { useState } from 'react'\nimport { FontAwesome } from '@expo/vector-icons';\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport { colors } from '../Global/Colors';\nimport { AntDesign } from '@expo/vector-icons';\n\n/**\n * @info este complemento es para cuando necesitamos hacer una busqueda\n * @from src/component/search\n * @param onSearch  onsearch viene de algun lado\n * @param error parametro de error\n * @param goBack \n * @returns theComponent\n */\n\nconst Search = ({\n    onSearch,\n    error = \"\",\n    goBack\n}) => {\n    const [keyword, setKeyword] = useState(\"\")\n    \n  const {width, height} = useWindowDimensions()\n\n  return (\n    <View style={ width > 350 ? styles.container : styles.containerSm}>\n        <TextInput style ={styles.input} \n            placeholder='Search...'\n            value={keyword}\n            onChangeText={setKeyword}\n        />\n        <Pressable onPress={()=>onSearch(keyword)}>\n            <FontAwesome name=\"search\" size={24} color=\"black\" />\n        </Pressable>\n        <Pressable onPress={()=> setKeyword(\"\")}>\n            <FontAwesome5 name=\"eraser\" size={24} color=\"black\" />\n        </Pressable>\n        \n       { error ?\n         <Text>\n            {error}\n        </Text>\n        : null}\n    </View>\n  )\n}\n\nexport default Search\n\nconst styles = StyleSheet.create({\n    container: {\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '10%',\n        gap: 18,\n    },\n    containerSm: {\n        flexDirection: 'column',\n        marginBottom: 2,\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '10%',\n        // gap: 18,\n    },\n    input: {\n        width: 250,\n        padding: 8,\n        fontSize: 18,\n        backgroundColor: colors.pink,\n        borderRadius: 10,\n    }\n})","import { FlatList, StyleSheet, View } from 'react-native'\nimport React, { useEffect, useState } from 'react'\n// import productsRaw from '../Data/products.json'\nimport { useGetProductsByCategoryQuery } from '../Services/shopServices'\nimport ProductItem from '../Components/ProductItem'\nimport { colors } from '../Global/Colors'\nimport Search from '../Components/Search'\nimport { useSelector } from 'react-redux'\n\n\nconst ItemListCategory = ({\n  // category,\n  // setCategory,\n  // setProductSelected, \n  navigation, route\n}) => {\n\n  // const {category} = route.params // ahora lo traigo de Redux  \n  // const  productsSelected = useSelector(state=> state.shopReducer.value.productsSelected )\n  const categorySelected = useSelector(state=> state.shopReducer.value.categorySelected)\n  const {data: productsSelected, isLoading, isError} = useGetProductsByCategoryQuery(categorySelected)\n\n  \n  console.log(\"productsSelected\",productsSelected);\n  console.log(\"loading\",isLoading);\n  console.log(\"err\",isError);\n  \n  const [products, setProducts] = useState([])\n  const [keyword, setKeyword] = useState(\"\")\n  const [keywordError, setKeywordError] = useState(\"\")\n\n  useEffect(()=> {\n    //Lógica de manejo de category\n    if(productsSelected) { \n      const productsFiltered = productsSelected.filter(product =>  product.title.toLocaleLowerCase().includes(keyword.toLowerCase()))\n      setProducts(productsFiltered)\n    }\n\n  }, [productsSelected, keyword])\n\n\n  const onSearch = (input) => {\n    const expression = /^[a-zA-Z0-9\\ ]*$/\n    const evaluation = expression.test(input)\n\n    if (evaluation) {\n      setKeyword(input)\n      setKeywordError(\"\")\n    } else {\n      console.log(\"Solo letras y números\");\n      setKeywordError(\"Solo letras y números\")\n    }\n\n  }  \n\n  return (\n    <View style={styles.container}>\n      \n        <Search\n          onSearch={onSearch}\n          error={keywordError}\n          goBack={()=> navigation.goBack()} \n        />\n      \n        <FlatList\n            data = {products}\n            keyExtractor={product => product.id}\n            renderItem={({item}) => <ProductItem  navigation={navigation}  item={item}  />}\n            showsVerticalScrollIndicator={false}\n        />\n    </View>\n  )\n}\n\nexport default ItemListCategory\n\nconst styles = StyleSheet.create({\n    container: {\n        height: '90%',\n        backgroundColor: colors.lightPink,\n        alignItems: 'center'\n    }\n})","import { createSlice } from \"@reduxjs/toolkit\";  \r\n\r\nexport const cartSlice = createSlice({\r\n    name: \"Cart\",\r\n    initialState: {\r\n        value: {\r\n            user: \"Hardcoder user\",\r\n            updatedAt: \"\",\r\n            total: null,\r\n            items: []\r\n        }\r\n    },\r\n    reducers: {\r\n        addCartItem: (state, action) => {\r\n            //Logic to add item\r\n            //1. Check productExists\r\n            const productExists = state.value.items.some(item => item.id === action.payload.id)\r\n\r\n            //2. Distinct logic if exists product or not\r\n            if (productExists) {\r\n                state.value.items = state.value.items.map(item => {\r\n                    if (item.id === action.payload.id) {\r\n                        item.quantity += action.payload.quantity\r\n                        return item\r\n                    }\r\n                    return item\r\n                })\r\n            } else state.value.items.push(action.payload)\r\n\r\n            //3. Update total\r\n            state.value.total = state.value.items.reduce(\r\n                (acc, currentItem) => acc += currentItem.price * currentItem.quantity,\r\n                0\r\n            )\r\n\r\n            //4. Update updatedAt\r\n            state.value.updatedAt = new Date().toLocaleString()\r\n        },\r\n        removeCartItem: (state,action) => {\r\n            //Logic to remove item\r\n        }\r\n    }\r\n})\r\n\r\nexport const {addCartItem, removeCartItem} = cartSlice.actions\r\n\r\nexport default cartSlice.reducer","import {\n  Button,\n  Image,\n  Pressable,\n  StyleSheet,\n  Text,\n  View,\n  useWindowDimensions,\n} from \"react-native\";\nimport React, { useEffect, useState } from \"react\";\nimport allProducts from \"../Data/products.json\";\nimport { useDispatch } from \"react-redux\";\nimport { addCartItem } from \"../features/Cart/cartSlice\";\n\nconst ItemDetail = ({ \n  navigation,\n  route\n}) => {\n\n  const {productId: idSelected} = route.params\n\n  const dispatch = useDispatch()\n\n  const [product, setProduct] = useState(null);\n  const [orientation, setOrientation] = useState(\"portrait\");\n  const { width, height } = useWindowDimensions();\n\n  useEffect(() => {\n      if (width > height) setOrientation(\"landscape\");\n      else setOrientation(\"portrait\");\n  }, [width, height]);\n\n  useEffect(() => {\n      //Encontrar el producto por su id\n      const productSelected = allProducts.find(\n          (product) => product.id === idSelected\n          );\n      setProduct(productSelected);\n  }, [idSelected]);\n\n  const onAddCart = () => {\n      dispatch(addCartItem({\n          ...product,\n          quantity: 1\n      }))\n  }\n\n  return (\n      <View>\n          {product ? (\n              <View\n                  style={\n                      orientation === \"portrait\"\n                          ? styles.mainContainer\n                          : styles.mainContainerLandscape\n                  }\n              >\n                  <Image\n                      source={{ uri: product.images[0] }}\n                      style={styles.image}\n                      resizeMode=\"cover\"\n                  />\n                  <View style={styles.textContainer}>\n                      <Text style = {styles.text}>{product.title}</Text>\n                      <Text style = {styles.text}>{product.description}</Text>\n                      <Text style = {styles.text}>${product.price}</Text>\n                      <Button title=\"Add cart\"\n                          onPress={onAddCart}\n                      ></Button>\n                  </View>\n              </View>\n          ) : null}\n      </View>\n  );\n};\n\nexport default ItemDetail;\n\nconst styles = StyleSheet.create({\n  mainContainer: {\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      padding: 10,\n  },\n  mainContainerLandscape: {\n      flexDirection: \"row\",\n      justifyContent: \"center\",\n      alignItems: \"flex-start\",\n      padding: 10,\n  },\n  image: {\n      width: 300,\n      height: 250,\n  },\n  textContainer: {\n      padding: 10,\n      flexDirection: \"column\",\n  },\n  text: {\n      fontSize: 20,\n  }\n});\n\n\n// import { Image, StyleSheet, Button, Text, View, useWindowDimensions } from 'react-native'\n// import React, { useEffect, useState } from 'react'\n// import allProducts from '../Data/products.json'\n// import { addCartItem } from '../features/Cart/cartSlice' \n// import { useDispatch, useSelector } from 'react-redux'\n\n// const ItemDetail = ({ navigation, route }) => {\n\n\n//   const { productId: idSelected } = route.params\n\n//   const productSelected2 = useSelector(state => state.shopReducer.value.productSelected)\n\n\n//   ////////////// ACA TENGO QUE TRAER EL PRODUCTSELECTED! DE REDUX (SHOPSLICE! )\n\n//   console.log(\"---------\", productSelected2)\n//   const [product, setProduct] = useState(null);\n//   const [orientation, setOrientation] = useState(\"portrait\");\n//   const { width, height } = useWindowDimensions();\n//   const dispatch = useDispatch()\n\n//   useEffect(() => {\n//     if (width > height) setOrientation(\"landscape\");\n//     else setOrientation(\"portrait\");\n//   }, [width, height]);\n\n//   useEffect(() => {\n//     //Encontrar el producto por su id\n//     const productSelected = allProducts.find(\n//       (product) => product.id === idSelected\n//     );\n//     setProduct(productSelected);\n//   }, [idSelected]);\n\n//   const onAddCart = () => {\n//     dispatch(addCartItem({\n//       ...product,\n//       quantity: 1\n//     }\n//     ))\n//   }\n\n//   return (\n//     <View> \n//   <Button onPress={() => navigation.goBack()} title=' GO BACK'\n//       />\n \n//       {product ? <> \n//          <View\n//         style={orientation === \"portrait\" ? styles.mainContainer : styles.mainContainerLandscape}\n//       >\n//         <Image\n//           source={{ uri: product.images[0] }}\n//           style={styles.image}\n//           resizeMode='cover'\n//         />\n//         <View style={styles.textContainer}>\n//           <Text> {product.title}</Text>\n//           <Text> {product.description}</Text>\n//           <Text> $ {product.price}</Text>\n//           <Button title=\"Agregar al carrito \"\n//             onPress={onAddCart}> </Button>\n//            </View>\n//       </View> \n//       </> : <View><Text> NO HAY PRODUCTO</Text></View>}\n//     </View>\n//   )\n// }\n\n// export default ItemDetail\n\n// const styles = StyleSheet.create({\n//   mainContainer:\n//   {\n//     flexDirection: 'column',\n//     justifyContent: ' center',\n//     alignItems: 'flex-start',\n//     padding: 10.\n//   },\n//   mainContainerLandscape:\n//   {\n//     flexDirection: 'row',\n//     justifyContent: ' center',\n//     alignItems: 'flex-start',\n//     padding: 10.\n//   },\n//   textContainer: {\n//     flexDirection: 'column'\n//   },\n//   image: {\n//     minWidth: 200,\n//     width: '90%',\n//     height: 250,\n//   }\n// })","import Header from '../Components/Header';\r\nimport Home from '../Screens/Home';\r\nimport ItemListCategory from '../Screens/ItemListCategory'; \r\nimport ItemDetail from '../Screens/ItemDetail';\r\n\r\nimport { StyleSheet, Text, View } from 'react-native';\r\nimport React from 'react' \r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\n\r\n\r\nconst Stack = createNativeStackNavigator()\r\n\r\nconst ShopStack = () => {\r\n  return (\r\n      <Stack.Navigator\r\n      screenOptions={\r\n        ({route, navigation}) => (\r\n            {\r\n                header: () => {\r\n                    return <Header\r\n                        route = {route}\r\n                        navigation = {navigation}\r\n                    />\r\n                },\r\n\r\n            }\r\n        )\r\n    }    \r\n      >\r\n\r\n        <Stack.Screen\r\n            name='Home'\r\n            component={Home}\r\n        />\r\n\r\n        <Stack.Screen\r\n            name='ItemListCategory'\r\n            component={ItemListCategory}\r\n        />\r\n\r\n        <Stack.Screen\r\n            name='ItemDetail'\r\n            component={ItemDetail}\r\n        /> \r\n    </Stack.Navigator>\r\n  )\r\n}\r\n\r\nexport default ShopStack\r\n\r\nconst styles = StyleSheet.create({})","import { StyleSheet, Text, View } from \"react-native\";\r\nimport React from \"react\";\r\nimport { colors } from \"../Global/Colors\";\r\nimport { Entypo } from \"@expo/vector-icons\";\r\n\r\nconst CartItem = ({ cartItem }) => { \r\n    return (\r\n        <View style={styles.card} onPress={() => {}}>\r\n            <View style={styles.textContainer}>\r\n                <Text style={styles.text}>{cartItem.title} ({cartItem.quantity})</Text>\r\n                <Text style={styles.text2}>{cartItem.brand}</Text>\r\n                <Text style={styles.text2}>${cartItem.price}</Text>\r\n            </View>\r\n            <Entypo name=\"trash\" size={30} color=\"black\" />\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default CartItem;\r\n\r\nconst styles = StyleSheet.create({\r\n    card: {\r\n        height: 100,\r\n        backgroundColor: colors.pink,\r\n        padding: 10,\r\n        margin: 10,\r\n        borderWidth: 2,\r\n        borderRadius: 10,\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\",\r\n    },\r\n    textContainer: {\r\n        width: \"70%\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"flex-start\",\r\n        alignItems: \"flex-start\",\r\n    },\r\n    text: {\r\n        fontFamily: \"Josefin\",\r\n        fontSize: 19,\r\n        color: colors.red,\r\n    },\r\n    text2: {\r\n        fontFamily: \"Josefin\",\r\n        fontSize: 14,\r\n        color: colors.peach,\r\n    },\r\n});","import { FlatList, Pressable, StyleSheet, Text, View } from 'react-native'\r\nimport React from 'react'\r\nimport CartItem from '../Components/CartItem';\r\nimport { useSelector } from 'react-redux';\r\nimport { usePostCartMutation } from '../Services/shopServices';\r\n\r\nconst Cart = () => {\r\n    const {items: CartData, total, updatedAt, user} = useSelector(state => state.cartReducer.value)\r\n    const [triggerPostCart, result] = usePostCartMutation()\r\n\r\n    const onConfirm = () => {\r\n        triggerPostCart({items: CartData, total, user, updatedAt})\r\n    }\r\n\r\n    console.log(result);\r\n\r\n    return (\r\n    <View style={styles.container}>\r\n        <FlatList\r\n            data={CartData}\r\n            keyExtractor={cartItem => cartItem.id}\r\n            renderItem={({item})=> {\r\n                return (\r\n                    <CartItem\r\n                        cartItem={item}\r\n                    />\r\n                )\r\n            }}\r\n        />\r\n        <View style={styles.totalContainer}>\r\n            <Pressable\r\n                onPress = {onConfirm}\r\n            >\r\n                <Text>\r\n                    Confirm\r\n                </Text>\r\n            </Pressable>\r\n            <Text>Total: ${total}</Text>\r\n        </View>\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default Cart\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        justifyContent: 'space-between',\r\n        flex: 1,\r\n    },\r\n    totalContainer: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-around',\r\n        alignItems: 'center',\r\n        paddingBottom: 20,\r\n    }\r\n})\r\n\r\n\r\n// import { Pressable, StyleSheet, Text, View } from 'react-native'\r\n// import React from 'react'\r\n// // import CartData from '../Data/cart.json'\r\n// import CartItem from '../Components/CartItem'\r\n// import { FlatList } from 'react-native-web'\r\n// import { useSelector } from 'react-redux'\r\n// import { usePostCartMutation } from '../Services/shopServices'\r\n\r\n\r\n// const Cart = () => { \r\n//     const {items: CartData, total, updatedAt, user} = useSelector(state => state.cartReducer.value)\r\n//     const [triggerPostCart, result] = usePostCartMutation()\r\n\r\n      \r\n//     const confirmCart = () => {\r\n//         // chekeo de stock\r\n//         triggerPostCart({CartData, total ,user, updatedAt})\r\n//     }\r\n//     // const total = CartData.reduce((acc, item) => \r\n//     // acc += item.price * item.quantity, 0)\r\n\r\n\r\n//     console.log(\"result\",result);\r\n\r\n//   return (\r\n//     <View style={styles.container}>\r\n\r\n//     <FlatList\r\n//     data={CartData}\r\n//     keyExtractor={cartItem => cartItem.id}\r\n//     renderItem={ ({item})=>{\r\n//         return(\r\n//             <CartItem cartItem={item}/>\r\n//         )\r\n//     } }\r\n//     />    \r\n\r\n//     <View style={styles.totalContainer}>\r\n//     <Pressable\r\n//     onPress={confirmCart} >\r\n//         <Text  style={styles.confirm}>\r\n//           Confirm\r\n//         </Text>\r\n//     </Pressable>\r\n//         <Text style={styles.total}>\r\n//             Total : {total}\r\n//         </Text>\r\n\r\n//     </View>\r\n//     </View>\r\n//   )\r\n// }\r\n\r\n// export default Cart\r\n\r\n// const styles = StyleSheet.create({\r\n//     confirm:{ \r\n//             backgroundColor:\"blue\",\r\n//             padding: \"15px\",\r\n//             flexDirection: 'row',\r\n//             marginBottom: 100,\r\n//                 justifyContent:'center',\r\n//                 alignItems: 'center',\r\n//     },\r\n//         totalContainer:{\r\n//             flexDirection: 'row',\r\n//             marginBottom: 20,\r\n//             justifyContent:'center',\r\n//             alignItems: 'center',\r\n//         }, \r\n//         container: {\r\n//             justifyContent: 'space-between',\r\n//             flex: 1,\r\n//         },\r\n//         total: {\r\n//             marginTop: \"-100px\",\r\n//         padding: \"15px\",\r\n//         fontSize: 24,\r\n//     }\r\n// })","import Header from '../Components/Header';\r\nimport Cart from '../Screens/Cart'\r\nimport React from 'react' \r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\n\r\n\r\nconst Stack = createNativeStackNavigator()\r\n\r\nconst CartStack = () => {\r\n    return (\r\n        <Stack.Navigator\r\n            initialRouteName=\"Cart\"\r\n            screenOptions={({ route, navigation }) => ({\r\n                header: () => {\r\n                    return <Header route={route} navigation={navigation} />;\r\n                },\r\n            })}\r\n        >\r\n            <Stack.Screen name=\"CartScreen\" component={Cart} />\r\n\r\n        </Stack.Navigator>\r\n    );\r\n};\r\n\r\nexport default CartStack;\r\n ","import { StyleSheet, Text, View } from \"react-native\";\r\nimport { Feather } from \"@expo/vector-icons\";\r\nimport React from \"react\";\r\nimport { colors } from \"../Global/Colors\";\r\n\r\nconst OrderItem = ({ order }) => {\r\n    const total = order.items.reduce(\r\n        (acc, currentItem) => (acc += currentItem.price * currentItem.quantity),\r\n        0\r\n    );\r\n\r\n    return (\r\n        <View style={styles.card} onPress={() => {}}>\r\n            <View style={styles.textContainer}>\r\n                <Text style={styles.text}>\r\n                    {new Date(order.createdAt).toLocaleString()}\r\n                </Text>\r\n                <Text style={styles.text2}>${total}</Text>\r\n            </View>\r\n            <Feather name=\"search\" size={30} color=\"black\" />\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default OrderItem;\r\n\r\nconst styles = StyleSheet.create({\r\n    card: {\r\n        height: 100,\r\n        backgroundColor: colors.peach,\r\n        padding: 10,\r\n        margin: 10,\r\n        borderWidth: 2,\r\n        borderRadius: 10,\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\",\r\n    },\r\n    textContainer: {\r\n        width: \"70%\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"flex-start\",\r\n        alignItems: \"flex-start\",\r\n    },\r\n    text: {\r\n        fontFamily: \"Josefin\",\r\n        fontSize: 17,\r\n        color: \"black\",\r\n    },\r\n    text2: {\r\n        fontFamily: \"Josefin\",\r\n        fontSize: 19,\r\n        color: \"gray\",\r\n    },\r\n});\r\n\r\n// import { StyleSheet, Text, View } from \"react-native\";\r\n// import { Feather } from \"@expo/vector-icons\";\r\n// import React from \"react\";\r\n// import { colors } from \"../Global/Colors\";\r\n\r\n// const OrderItem = ({ order }) => {\r\n//     const total = order.items.reduce(\r\n//         (acc, currentItem) => (acc += currentItem.price * currentItem.quantity),\r\n//         0\r\n//     );\r\n\r\n//     return (\r\n//         <View style={styles.card} onPress={() => {}}>\r\n//             <View style={styles.textContainer}>\r\n//                 <Text style={styles.text}>\r\n//                     {new Date(order.createdAt).toLocaleString()}\r\n//                 </Text>\r\n//                 <Text style={styles.text2}>${total}</Text>\r\n//             </View>\r\n//             <Feather name=\"search\" size={30} color=\"black\" />\r\n//         </View>\r\n//     );\r\n// };\r\n\r\n// export default OrderItem;\r\n\r\n// const styles = StyleSheet.create({\r\n//     card: {\r\n//         height: 100,\r\n//         backgroundColor: colors.peach,\r\n//         padding: 10,\r\n//         margin: 10,\r\n//         borderWidth: 2,\r\n//         borderRadius: 10,\r\n//         flexDirection: \"row\",\r\n//         justifyContent: \"space-between\",\r\n//         alignItems: \"center\",\r\n//     },\r\n//     textContainer: {\r\n//         width: \"70%\",\r\n//         flexDirection: \"column\",\r\n//         justifyContent: \"flex-start\",\r\n//         alignItems: \"flex-start\",\r\n//     },\r\n//     text: {\r\n//         fontFamily: \"Josefin\",\r\n//         fontSize: 17,\r\n//         color: \"black\",\r\n//     },\r\n//     text2: {\r\n//         fontFamily: \"Josefin\",\r\n//         fontSize: 19,\r\n//         color: \"gray\",\r\n//     },\r\n// });","import { FlatList, StyleSheet, Text, View } from 'react-native'\r\nimport React from 'react'\r\nimport OrderData from '../Data/orders.json'\r\nimport OrderItem from '../Components/OrdenItem'\r\n\r\nconst OrderScreen = () => {\r\n  return (\r\n    <View>\r\n        <FlatList\r\n            data={OrderData}\r\n            keyExtractor={orderItem => orderItem.id}\r\n            renderItem={({item}) => {\r\n                return (\r\n                    <OrderItem \r\n                      order={item}\r\n                    />\r\n                )\r\n            }}\r\n        />\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default OrderScreen\r\n\r\nconst styles = StyleSheet.create({})\r\n\r\n// import { FlatList, StyleSheet, Text, View } from 'react-native'\r\n// import React from 'react'\r\n// import OrderData from '../Data/orders.json'\r\n// import OrderItem from '../Components/OrdenItem'\r\n\r\n// const OrderScreen = () => {\r\n//   return (\r\n//      <FlatList\r\n//         data={OrderData}\r\n//         keyExtractor={orderItem =>orderItem.id }\r\n//         renderItem={({item}) => {\r\n//             return(\r\n//                 <OrderItem order={item}/>\r\n\r\n//             )\r\n//         }}\r\n       \r\n//         />\r\n\r\n \r\n//   )\r\n// }\r\n\r\n// export default OrderScreen\r\n\r\n// const styles = StyleSheet.create({})","import Header from '../Components/Header';\r\nimport Home from '../Screens/Home';\r\nimport ItemListCategory from '../Screens/ItemListCategory'; \r\nimport ItemDetail from '../Screens/ItemDetail';\r\nimport Cart from '../Screens/Cart'\r\nimport { StyleSheet, Text, View } from 'react-native';\r\nimport React from 'react' \r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport OrderScreen from '../Screens/OrderScreen';\r\n\r\nconst Stack = createNativeStackNavigator()\r\n\r\nconst OrderStack = () => {\r\n  return (\r\n    \r\n    <Stack.Navigator\r\n            initialRouteName=\"OrderScreen\"\r\n            screenOptions={({ route, navigation }) => ({\r\n                header: () => {\r\n                    return <Header route={route} navigation={navigation} />;\r\n                },\r\n            })}\r\n        >\r\n\r\n        <Stack.Screen\r\n            name='OrderScreen'\r\n            component={OrderScreen}\r\n        />\r\n \r\n    </Stack.Navigator>\r\n  )\r\n}\r\n\r\nexport default OrderStack\r\n\r\nconst styles = StyleSheet.create({})","import { StyleSheet, Text, TextInput, View } from 'react-native'\r\nimport React, { useState } from 'react'\r\nimport { colors } from '../Global/Colors';\r\n\r\nconst InputForm = ({\r\n    label, \r\n    onChange, \r\n    error = \"\",\r\n    isSecure = false\r\n}) => {\r\n    const [input, setInput] = useState(\"\");\r\n    const onChangeText = (text) => {\r\n        setInput(text)\r\n        onChange(text)\r\n    }\r\n  return (\r\n    <View style={styles.inputContainer}>\r\n      <Text style={styles.subtitle}>{label}</Text>\r\n      <TextInput\r\n        style ={styles.input}\r\n        value={input}\r\n        onChangeText={onChangeText}\r\n        secureTextEntry={isSecure}\r\n      />\r\n      {error ? \r\n        <Text style = {styles.error}>\r\n            {error}\r\n        </Text>\r\n        :\r\n        null\r\n    }\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default InputForm\r\n\r\nconst styles = StyleSheet.create({\r\n    inputContainer: {\r\n        flexDirection: 'column',\r\n        justifyContent: 'flex-start',\r\n        alignItems: 'center',\r\n        width: '100%'\r\n    },\r\n    subtitle: {\r\n        width: '90%',\r\n        fontSize: 16,\r\n        fontFamily: 'Josefin'\r\n    },\r\n    error: {\r\n        fontSize: 16,\r\n        color: 'red',\r\n        fontFamily: 'Josefin',\r\n        fontStyle: 'italic',\r\n    },\r\n    input: {\r\n        width: '90%',\r\n        borderWidth: 0,\r\n        borderBottomWidth: 3,\r\n        borderBottomColor: colors.peach,\r\n        padding: 2,\r\n        fontFamily: 'Josefin',\r\n        fontSize: 14,\r\n    }\r\n})","import { Pressable, StyleSheet, Text } from \"react-native\";\r\nimport React from \"react\";\r\nimport { colors } from \"../Global/Colors\";\r\n\r\nconst SubmitButton = ({ onPress, title }) => {\r\n    return (\r\n        <Pressable onPress={onPress} style={styles.button}>\r\n            <Text style={styles.text}>{title}</Text>\r\n        </Pressable>\r\n    );\r\n};\r\n\r\nexport default SubmitButton;\r\n\r\nconst styles = StyleSheet.create({\r\n    button: {\r\n        backgroundColor: colors.red,\r\n        borderRadius: 6,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        padding: 8,\r\n        width: '60%'\r\n    },\r\n    text: {\r\n        color: colors.lightPink, \r\n        fontSize: 22\r\n    },\r\n});","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\nimport { api_key } from \"../Database/firebaseConfig\";\r\n\r\nexport const authApi = createApi({\r\n    reducerPath: 'authApi',\r\n    baseQuery: fetchBaseQuery({baseUrl: 'https://identitytoolkit.googleapis.com/v1'}),\r\n    endpoints: (builder) => ({\r\n        signUp: builder.mutation({\r\n            query: (auth) => ({\r\n                url: `/accounts:signUp?key=${api_key}`,\r\n                method: `POST`,\r\n                body: auth\r\n            })\r\n        }),\r\n        signIn: builder.mutation({\r\n            query: (auth) => ({\r\n                url: `/accounts:signInWithPassword?key=${api_key}`,\r\n                method: `POST`,\r\n                body: auth\r\n            })\r\n        })\r\n    })\r\n})\r\n\r\nexport const {\r\n    useSignUpMutation, \r\n    useSignInMutation\r\n} = authApi","export  const isValidEmail = (emailInput) => {\r\n    const regex = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/\r\n    return regex.test(emailInput)\r\n}\r\n\r\nexport const isAtLeastSixCharacters = (input) => {\r\n    const regex = /.{6,}/\r\n    return regex.test(input)\r\n}","import { Pressable, StyleSheet, Text, View } from \"react-native\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport InputForm from \"../Components/InputForm\";\r\nimport SubmitButton from \"../Components/SubmitButton\";\r\nimport { colors } from \"../Global/Colors\";\r\nimport { useSignUpMutation } from \"../Services/authServices\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setUser } from \"../features/User/userSlice\";\r\nimport { isAtLeastSixCharacters, isValidEmail } from \"../Validations/auth\";\r\n/* import { useSignUpMutation } from \"../services/authService\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setUser } from \"../features/auth/authSlice\";\r\nimport { signupSchema } from \"../validations/singupSchema\"; */\r\n\r\nconst SignupScreen = ({ navigation }) => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [errorMail, setErrorMail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [errorPassword, setErrorPassword] = useState(\"\")\r\n    const [confirmPassword, setconfirmPassword] = useState(\"\");\r\n    const [errorConfirmPassword, setErrorConfirmPassword] = useState(\"\");\r\n\r\n    const [triggerSignUp, result] = useSignUpMutation()\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(()=> {\r\n        if (result.isSuccess) {\r\n            dispatch(\r\n                setUser({\r\n                    email: result.data.email,\r\n                    idToken: result.data.idToken,\r\n                    localId: result.data.localId,\r\n                    profileImage: \"\"\r\n                })\r\n            )\r\n        }\r\n    }, [result])\r\n\r\n    const onSubmit = () => {\r\n        try {\r\n            //Submit logic with validations\r\n            const isValidVariableEmail = isValidEmail(email)\r\n            const isCorrectPassword = isAtLeastSixCharacters(password)\r\n            const isRepeatedPasswordCorrect = password === confirmPassword\r\n\r\n            if (isValidVariableEmail && isCorrectPassword && isRepeatedPasswordCorrect) {\r\n                const request = {\r\n                    email,\r\n                    password,\r\n                    returnSecureToken: true\r\n                }\r\n                triggerSignUp(request)\r\n            }\r\n\r\n            if (!isValidVariableEmail) setErrorMail ('Email is not correct')\r\n            else setErrorMail('')\r\n            if (!isCorrectPassword) setErrorPassword ('Password must be at least 6 characters')\r\n            else setErrorPassword('')\r\n            if (!isRepeatedPasswordCorrect) setErrorConfirmPassword ('Passwords must match')\r\n            else setErrorConfirmPassword('')\r\n\r\n        } catch (err) {\r\n            console.log(\"Catch error\");\r\n            console.log(err.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <View style={styles.main}>\r\n            <View style={styles.container}>\r\n                <Text style={styles.title}>Signup</Text>\r\n                <InputForm label={\"email\"} onChange={setEmail} error={errorMail} />\r\n                <InputForm\r\n                    label={\"password\"}\r\n                    onChange={setPassword}\r\n                    error={errorPassword}\r\n                    isSecure={true}\r\n                />\r\n                <InputForm\r\n                    label={\"confirm password\"}\r\n                    onChange={setconfirmPassword}\r\n                    error={errorConfirmPassword}\r\n                    isSecure={true}\r\n                />\r\n                <SubmitButton onPress={onSubmit} title=\"Send\" />\r\n                <Text style={styles.sub}>Already have an account?</Text>\r\n                <Pressable onPress={() => navigation.navigate(\"Login\")}>\r\n                    <Text style={styles.subLink}>Login</Text>\r\n                </Pressable>\r\n            </View>\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default SignupScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n    main: {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n    },\r\n    container: {\r\n        width: \"90%\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        backgroundColor: colors.lightPink,\r\n        gap: 15,\r\n        paddingVertical: 20,\r\n        borderRadius: 10,\r\n    },\r\n    title: {\r\n        fontSize: 22,\r\n        fontFamily: \"Josefin\",\r\n    },\r\n    sub: {\r\n        fontSize: 14,\r\n        fontFamily: \"Josefin\",\r\n        color: \"black\",\r\n    },\r\n    subLink: {\r\n        fontSize: 14,\r\n        fontFamily: \"Josefin\",\r\n        color: \"blue\",\r\n    },\r\n});\r\n\r\n// import { Pressable, StyleSheet, Text, View } from \"react-native\";\r\n// import React, { useEffect, useState } from \"react\";\r\n// import InputForm from \"../Components/InputForm\";\r\n// import SubmitButton from \"../Components/SubmitButton\";\r\n// import { colors } from \"../Global/Colors\";\r\n// import { useSignUpMutation } from \"../Services/authServices\";\r\n// import { useDispatch } from \"react-redux\";\r\n// import { setUser } from \"../features/User/userSlice\";\r\n// import { isValidEmail, isAtLeastSixCharacters } from \"../Validations/auth\";\r\n// /* import { useSignUpMutation } from \"../services/authService\";\r\n// import { useDispatch } from \"react-redux\";\r\n// import { setUser } from \"../features/auth/authSlice\";\r\n// import { signupSchema } from \"../validations/singupSchema\"; */\r\n\r\n// const SignupScreen = ({ navigation }) => {\r\n//     const [email, setEmail] = useState(\"\");\r\n//     const [errorMail, setErrorMail] = useState(\"\");\r\n//     const [password, setPassword] = useState(\"\");\r\n//     const [errorPassword, setErrorPassword] = useState(\"\")\r\n//     const [confirmPassword, setconfirmPassword] = useState(\"\");\r\n//     const [errorConfirmPassword, setErrorConfirmPassword] = useState(\"\");\r\n\r\n//     const [triggerSignUp, result] = useSignUpMutation()\r\n//     const dispatch = useDispatch()\r\n\r\n//     console.log(result);\r\n\r\n//     useEffect(()=> {\r\n//         if (result.isSuccess) {\r\n//             dispatch(\r\n//                 setUser({\r\n//                     email: result.data.email,\r\n//                     idToken: result.data.idToken\r\n//                 })\r\n//             )\r\n//         }\r\n//     }, [result])\r\n\r\n//     const onSubmit = () => {\r\n//         try {\r\n//             //Submit logic with validations\r\n//             const isValidVariableEmail = isValidEmail(email)\r\n//             const isCorrectPassword = isAtLeastSixCharacters(password)\r\n//             const isRepeatedPasswordCorrect = password === confirmPassword\r\n\r\n//             if (isValidVariableEmail && isCorrectPassword && isRepeatedPasswordCorrect) {\r\n//                 const request = {\r\n//                     email,\r\n//                     password,\r\n//                     returnSecureToken: true\r\n//                 }\r\n//                 triggerSignUp(request)\r\n//             }\r\n\r\n//             if (!isValidVariableEmail) setErrorMail ('Email is not correct')\r\n//             else setErrorMail('')\r\n//             if (!isCorrectPassword) setErrorPassword ('Password must be at least 6 characters')\r\n//             else setErrorPassword('')\r\n//             if (!isRepeatedPasswordCorrect) setErrorConfirmPassword ('Passwords must match')\r\n//             else setErrorConfirmPassword('')\r\n\r\n//         } catch (err) {\r\n//             console.log(\"Catch error\");\r\n//             console.log(err.message);\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <View style={styles.main}>\r\n//             <View style={styles.container}>\r\n//                 <Text style={styles.title}>Signup</Text>\r\n//                 <InputForm label={\"email\"} onChange={setEmail} error={errorMail} />\r\n//                 <InputForm\r\n//                     label={\"password\"}\r\n//                     onChange={setPassword}\r\n//                     error={errorPassword}\r\n//                     isSecure={true}\r\n//                 />\r\n//                 <InputForm\r\n//                     label={\"confirm password\"}\r\n//                     onChange={setconfirmPassword}\r\n//                     error={errorConfirmPassword}\r\n//                     isSecure={true}\r\n//                 />\r\n//                 <SubmitButton onPress={onSubmit} title=\"Send\" />\r\n//                 <Text style={styles.sub}>Already have an account?</Text>\r\n//                 <Pressable onPress={() => navigation.navigate(\"Login\")}>\r\n//                     <Text style={styles.subLink}>Login</Text>\r\n//                 </Pressable>\r\n//             </View>\r\n//         </View>\r\n//     );\r\n// };\r\n\r\n// export default SignupScreen;\r\n\r\n// const styles = StyleSheet.create({\r\n//     main: {\r\n//         width: \"100%\",\r\n//         height: \"100%\",\r\n//         justifyContent: \"center\",\r\n//         alignItems: \"center\",\r\n//     },\r\n//     container: {\r\n//         width: \"90%\",\r\n//         flexDirection: \"column\",\r\n//         justifyContent: \"center\",\r\n//         alignItems: \"center\",\r\n//         backgroundColor: colors.lightPink,\r\n//         gap: 15,\r\n//         paddingVertical: 20,\r\n//         borderRadius: 10,\r\n//     },\r\n//     title: {\r\n//         fontSize: 22,\r\n//         fontFamily: \"Josefin\",\r\n//     },\r\n//     sub: {\r\n//         fontSize: 14,\r\n//         fontFamily: \"Josefin\",\r\n//         color: \"black\",\r\n//     },\r\n//     subLink: {\r\n//         fontSize: 14,\r\n//         fontFamily: \"Josefin\",\r\n//         color: \"blue\",\r\n//     },\r\n// });","import { Pressable, StyleSheet, Text, View } from \"react-native\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport InputForm from \"../Components/InputForm\";\r\nimport SubmitButton from \"../Components/SubmitButton\";\r\nimport { colors } from \"../Global/Colors\";\r\nimport { useSignInMutation } from \"../Services/authServices\";\r\nimport { isAtLeastSixCharacters, isValidEmail } from \"../Validations/auth\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setUser } from \"../features/User/userSlice\";\r\nimport { insertSession } from \"../SQLite\";\r\n\r\nconst LoginScreen = ({ navigation }) => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const [errorEmail, setErrorEmail] = useState('')\r\n    const [errorPassword, setErrorPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [triggerSignIn, resultSignIn] = useSignInMutation();\r\n    const onSubmit = () => {\r\n\r\n        //Submit logic with validations\r\n        const isValidVariableEmail = isValidEmail(email)\r\n        const isCorrectPassword = isAtLeastSixCharacters(password)\r\n\r\n        if (isValidVariableEmail && isCorrectPassword) {\r\n            triggerSignIn({\r\n                email,\r\n                password,\r\n                returnSecureToken: true,\r\n            });\r\n        }\r\n\r\n        if (!isValidVariableEmail) setErrorEmail ('Email is not correct')\r\n        else setErrorEmail('')\r\n        if (!isCorrectPassword) setErrorPassword ('Password must be at least 6 characters')\r\n        else setErrorPassword('')\r\n    };\r\n\r\n    useEffect(()=> {\r\n        (async ()=> {\r\n            try {\r\n                if(resultSignIn.isSuccess) {\r\n                    //Insert session in SQLite database\r\n                      console.log('inserting Session');\r\n                    const response = await insertSession({\r\n                        email: resultSignIn.data.email,\r\n                        idToken: resultSignIn.data.idToken,\r\n                        localId: resultSignIn.data.localId,\r\n                    })\r\n                    console.log('Session inserted: ');\r\n                    console.log(response);  \r\n                    dispatch(setUser({\r\n                        email: resultSignIn.data.email,\r\n                        idToken: resultSignIn.data.idToken,\r\n                        localId: resultSignIn.data.localId,\r\n                        profileImage: \"\",\r\n                        location: {\r\n                            latitude: \"\",\r\n                            longitude: \"\",\r\n                        }\r\n                    }))\r\n                }\r\n            } catch (error) {\r\n                console.log(error.message);\r\n            }\r\n        })()\r\n    }, [resultSignIn])\r\n\r\n    return (\r\n        <View style={styles.main}>\r\n            <View style={styles.container}>\r\n                <Text style={styles.title}>Login to start</Text>\r\n                <InputForm\r\n                    label={\"email\"}\r\n                    onChange={(email) => setEmail(email)}\r\n                    error={errorEmail}\r\n                />\r\n                <InputForm\r\n                    label={\"password\"}\r\n                    onChange={(password) => setPassword(password)}\r\n                    error={errorPassword}\r\n                    isSecure={true}\r\n                />\r\n                <SubmitButton onPress={onSubmit} title=\"Send\" />\r\n                <Text style={styles.sub}>Not have an account?</Text>\r\n                <Pressable onPress={() => navigation.navigate(\"Signup\")}>\r\n                    <Text style={styles.subLink}>Sign up</Text>\r\n                </Pressable>\r\n            </View>\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default LoginScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n    main: {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n    },\r\n    container: {\r\n        width: \"90%\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        backgroundColor: colors.lightPink,\r\n        gap: 15,\r\n        paddingVertical: 20,\r\n        borderRadius: 10,\r\n    },\r\n    title: {\r\n        fontSize: 22,\r\n        fontFamily: \"Josefin\",\r\n    },\r\n    sub: {\r\n        fontSize: 14,\r\n        color: \"black\",\r\n    },\r\n    subLink: {\r\n        fontSize: 14,\r\n        color: \"blue\",\r\n    },\r\n});\r\n// import { Pressable, StyleSheet, Text, View } from \"react-native\";\r\n// import React, { useEffect, useState } from \"react\";\r\n// import InputForm from \"../Components/InputForm\";\r\n// import SubmitButton from \"../Components/SubmitButton\";\r\n// import { colors } from \"../Global/Colors\";\r\n// import { useSignInMutation } from \"../Services/authServices\";\r\n// import { isAtLeastSixCharacters, isValidEmail } from \"../Validations/auth\";\r\n// import { useDispatch } from \"react-redux\";\r\n// import { setUser } from \"../features/User/userSlice\";\r\n\r\n// const LoginScreen = ({ navigation }) => {\r\n//     const [email, setEmail] = useState('');\r\n//     const [password, setPassword] = useState('');\r\n\r\n//     const [errorEmail, setErrorEmail] = useState('')\r\n//     const [errorPassword, setErrorPassword] = useState('')\r\n\r\n//     const dispatch = useDispatch()\r\n\r\n//     const [triggerSignIn, resultSignIn] = useSignInMutation();\r\n//     const onSubmit = () => {\r\n\r\n//         //Submit logic with validations\r\n//         const isValidVariableEmail = isValidEmail(email)\r\n//         const isCorrectPassword = isAtLeastSixCharacters(password)\r\n\r\n//         if (isValidVariableEmail && isCorrectPassword) {\r\n//             triggerSignIn({\r\n//                 email,\r\n//                 password,\r\n//                 returnSecureToken: true,\r\n//             });\r\n//         }\r\n\r\n//         if (!isValidVariableEmail) setErrorEmail ('Email is not correct')\r\n//         else setErrorEmail('')\r\n//         if (!isCorrectPassword) setErrorPassword ('Password must be at least 6 characters')\r\n//         else setErrorPassword('')\r\n//     };\r\n\r\n//     useEffect(()=> {\r\n//         if(resultSignIn.isSuccess) {\r\n//             dispatch(setUser({\r\n//                 email: resultSignIn.data.email,\r\n//                 idToken: resultSignIn.data.idToken,\r\n//                 localId: resultSignIn.data.localId,\r\n//                 profileImage: \"\"\r\n//             }))\r\n//         }\r\n//     }, [resultSignIn])\r\n\r\n//     return (\r\n//         <View style={styles.main}>\r\n//             <View style={styles.container}>\r\n//                 <Text style={styles.title}>Login to start</Text>\r\n//                 <InputForm\r\n//                     label={\"email\"}\r\n//                     onChange={(email) => setEmail(email)}\r\n//                     error={errorEmail}\r\n//                 />\r\n//                 <InputForm\r\n//                     label={\"password\"}\r\n//                     onChange={(password) => setPassword(password)}\r\n//                     error={errorPassword}\r\n//                     isSecure={true}\r\n//                 />\r\n//                 <SubmitButton onPress={onSubmit} title=\"Send\" />\r\n//                 <Text style={styles.sub}>Not have an account?</Text>\r\n//                 <Pressable onPress={() => navigation.navigate(\"Signup\")}>\r\n//                     <Text style={styles.subLink}>Sign up</Text>\r\n//                 </Pressable>\r\n//             </View>\r\n//         </View>\r\n//     );\r\n// };\r\n\r\n// export default LoginScreen;\r\n\r\n// const styles = StyleSheet.create({\r\n//     main: {\r\n//         width: \"100%\",\r\n//         height: \"100%\",\r\n//         justifyContent: \"center\",\r\n//         alignItems: \"center\",\r\n//     },\r\n//     container: {\r\n//         width: \"90%\",\r\n//         flexDirection: \"column\",\r\n//         justifyContent: \"center\",\r\n//         alignItems: \"center\",\r\n//         backgroundColor: colors.lightPink,\r\n//         gap: 15,\r\n//         paddingVertical: 20,\r\n//         borderRadius: 10,\r\n//     },\r\n//     title: {\r\n//         fontSize: 22,\r\n//         fontFamily: \"Josefin\",\r\n//     },\r\n//     sub: {\r\n//         fontSize: 14,\r\n//         color: \"black\",\r\n//     },\r\n//     subLink: {\r\n//         fontSize: 14,\r\n//         color: \"blue\",\r\n//     },\r\n// });\r\n\r\n\r\n// // import { Pressable, StyleSheet, Text, View } from 'react-native' \r\n// // import InputForm from '../Components/InputForm'\r\n// // import SubmitButton from '../Components/SubmitButton'\r\n// // import { colors } from '../Global/Colors'\r\n// // import { useLoginMutation } from '../Services/authServices' \r\n// // import { useDispatch } from \"react-redux\";\r\n// // import React, { useEffect, useState } from \"react\";\r\n// // import { setUser } from \"../features/User/userSlice\";\r\n\r\n// // import { isValidEmail, isAtLeastSixCharacters } from \"../Validations/auth\";\r\n\r\n// // const LoginScreen = ({navigation}) => { \r\n// //     const [email, setEmail] = useState(\"\");\r\n// //     const [errorMail, setErrorMail] = useState(\"\");\r\n// //     const [password, setPassword] = useState(\"\");\r\n// //     const [errorPassword, setErrorPassword] = useState(\"\")\r\n// //     const [confirmPassword, setconfirmPassword] = useState(\"\");\r\n// //     const [errorConfirmPassword, setErrorConfirmPassword] = useState(\"\");\r\n\r\n// //     const [triggerLogin, result] = useLoginMutation()\r\n// //     const dispatch = useDispatch()\r\n// //     console.log(\"RRRRRRRRRRR\" , result);\r\n// //     useEffect(()=> {\r\n// //         if (result.isSuccess) {\r\n// //             dispatch(\r\n// //                 setUser({\r\n// //                     email: result.data.email,\r\n// //                     idToken: result.data.idToken\r\n// //                 })\r\n// //             )\r\n// //         }\r\n// //     }, [result])\r\n// //     const onSubmit = () => {\r\n// //         try {\r\n// //             //Submit logic with validations\r\n// //             const isValidVariableEmail = isValidEmail(email)\r\n// //             const isCorrectPassword = isAtLeastSixCharacters(password) \r\n\r\n// //             if (isValidVariableEmail && isCorrectPassword ) {\r\n// //                 const request = {\r\n// //                     email,\r\n// //                     password,\r\n// //                     returnSecureToken: true\r\n// //                 }\r\n// //                 triggerLogin(request)\r\n// //             }\r\n\r\n// //             if (!isValidVariableEmail) setErrorMail ('Email is not correct')\r\n// //             else setErrorMail('')\r\n// //             if (!isCorrectPassword) setErrorPassword ('Password must be at least 6 characters')\r\n// //             else setErrorPassword('') \r\n\r\n// //         } catch (err) {\r\n// //             console.log(\"Catch error\");\r\n// //             console.log(err.message);\r\n// //         }\r\n// //     }\r\n// //   return (\r\n// //     <View style={styles.main}>\r\n// //         <View style={styles.container}>\r\n// //             <Text style={styles.title}>Login to start</Text>\r\n// //             <InputForm \r\n// //                 label={\"email\"}\r\n// //                 onChange={setEmail}\r\n// //                 error={\"\"}\r\n// //             />\r\n// //             <InputForm \r\n// //                 label={\"password\"}\r\n// //                 onChange={setPassword}\r\n// //                 error={\"\"}\r\n// //                 isSecure={true}\r\n// //             />\r\n// //             <SubmitButton \r\n// //                 onPress={onSubmit}\r\n// //                 title = \"Send\"\r\n// //             />\r\n// //             <Text style={styles.sub}>Not have an account?</Text>\r\n// //             <Pressable onPress={()=> navigation.navigate('Signup')}>\r\n// //                 <Text style={styles.subLink}>Sign up</Text>\r\n// //             </Pressable>\r\n// //         </View>\r\n// //     </View>\r\n// //   )\r\n// // }\r\n\r\n// // export default LoginScreen\r\n\r\n// // const styles = StyleSheet.create({\r\n// //     main: {\r\n// //         width: '100%',\r\n// //         height: '100%',\r\n// //         justifyContent: 'center',\r\n// //         alignItems: 'center'\r\n// //     },\r\n// //     container: {\r\n// //         width: '90%',\r\n// //         flexDirection: 'column',\r\n// //         justifyContent: 'center',\r\n// //         alignItems: 'center',\r\n// //         backgroundColor: colors.lightPink,\r\n// //         gap: 15,\r\n// //         paddingVertical: 20,\r\n// //         borderRadius: 10,\r\n// //     },\r\n// //     title: {\r\n// //         fontSize: 22,\r\n// //         fontFamily: 'Josefin'\r\n// //     },\r\n// //     sub: {\r\n// //         fontSize: 14,\r\n// //         color: 'black',\r\n// //     },\r\n// //     subLink: {\r\n// //         fontSize: 14,\r\n// //         color: 'blue',\r\n// //     }\r\n// // })\r\n\r\n// // import { Pressable, StyleSheet, Text, View } from 'react-native' \r\n// // import InputForm from '../Components/InputForm'\r\n// // import SubmitButton from '../Components/SubmitButton'\r\n// // import { colors } from '../Global/Colors'\r\n// // import { useLoginMutation } from '../Services/authServices' \r\n// // import { useDispatch } from \"react-redux\";\r\n// // import React, { useEffect, useState } from \"react\";\r\n// // import { setUser } from \"../features/User/userSlice\";\r\n\r\n// // import { isValidEmail, isAtLeastSixCharacters } from \"../Validations/auth\";\r\n\r\n// // const LoginScreen = ({navigation}) => { \r\n// //     const [email, setEmail] = useState(\"\");\r\n// //     const [errorMail, setErrorMail] = useState(\"\");\r\n// //     const [password, setPassword] = useState(\"\");\r\n// //     const [errorPassword, setErrorPassword] = useState(\"\")\r\n// //     const [confirmPassword, setconfirmPassword] = useState(\"\");\r\n// //     const [errorConfirmPassword, setErrorConfirmPassword] = useState(\"\");\r\n\r\n// //     const [triggerLogin, result] = useLoginMutation()\r\n// //     const dispatch = useDispatch()\r\n// //     console.log(\"RRRRRRRRRRR\" , result);\r\n// //     useEffect(()=> {\r\n// //         if (result.isSuccess) {\r\n// //             dispatch(\r\n// //                 setUser({\r\n// //                     email: result.data.email,\r\n// //                     idToken: result.data.idToken\r\n// //                 })\r\n// //             )\r\n// //         }\r\n// //     }, [result])\r\n// //     const onSubmit = () => {\r\n// //         try {\r\n// //             //Submit logic with validations\r\n// //             const isValidVariableEmail = isValidEmail(email)\r\n// //             const isCorrectPassword = isAtLeastSixCharacters(password) \r\n\r\n// //             if (isValidVariableEmail && isCorrectPassword ) {\r\n// //                 const request = {\r\n// //                     email,\r\n// //                     password,\r\n// //                     returnSecureToken: true\r\n// //                 }\r\n// //                 triggerLogin(request)\r\n// //             }\r\n\r\n// //             if (!isValidVariableEmail) setErrorMail ('Email is not correct')\r\n// //             else setErrorMail('')\r\n// //             if (!isCorrectPassword) setErrorPassword ('Password must be at least 6 characters')\r\n// //             else setErrorPassword('') \r\n\r\n// //         } catch (err) {\r\n// //             console.log(\"Catch error\");\r\n// //             console.log(err.message);\r\n// //         }\r\n// //     }\r\n// //   return (\r\n// //     <View style={styles.main}>\r\n// //         <View style={styles.container}>\r\n// //             <Text style={styles.title}>Login to start</Text>\r\n// //             <InputForm \r\n// //                 label={\"email\"}\r\n// //                 onChange={setEmail}\r\n// //                 error={\"\"}\r\n// //             />\r\n// //             <InputForm \r\n// //                 label={\"password\"}\r\n// //                 onChange={setPassword}\r\n// //                 error={\"\"}\r\n// //                 isSecure={true}\r\n// //             />\r\n// //             <SubmitButton \r\n// //                 onPress={onSubmit}\r\n// //                 title = \"Send\"\r\n// //             />\r\n// //             <Text style={styles.sub}>Not have an account?</Text>\r\n// //             <Pressable onPress={()=> navigation.navigate('Signup')}>\r\n// //                 <Text style={styles.subLink}>Sign up</Text>\r\n// //             </Pressable>\r\n// //         </View>\r\n// //     </View>\r\n// //   )\r\n// // }\r\n\r\n// // export default LoginScreen\r\n\r\n// // const styles = StyleSheet.create({\r\n// //     main: {\r\n// //         width: '100%',\r\n// //         height: '100%',\r\n// //         justifyContent: 'center',\r\n// //         alignItems: 'center'\r\n// //     },\r\n// //     container: {\r\n// //         width: '90%',\r\n// //         flexDirection: 'column',\r\n// //         justifyContent: 'center',\r\n// //         alignItems: 'center',\r\n// //         backgroundColor: colors.lightPink,\r\n// //         gap: 15,\r\n// //         paddingVertical: 20,\r\n// //         borderRadius: 10,\r\n// //     },\r\n// //     title: {\r\n// //         fontSize: 22,\r\n// //         fontFamily: 'Josefin'\r\n// //     },\r\n// //     sub: {\r\n// //         fontSize: 14,\r\n// //         color: 'black',\r\n// //     },\r\n// //     subLink: {\r\n// //         fontSize: 14,\r\n// //         color: 'blue',\r\n// //     }\r\n// // })\r\n\r\n// // import { Pressable, StyleSheet, Text, View } from 'react-native' \r\n// // import InputForm from '../Components/InputForm'\r\n// // import SubmitButton from '../Components/SubmitButton'\r\n// // import { colors } from '../Global/Colors'\r\n// // import { useLoginMutation } from '../Services/authServices' \r\n// // import { useDispatch } from \"react-redux\";\r\n// // import React, { useEffect, useState } from \"react\";\r\n// // import { setUser } from \"../features/User/userSlice\";\r\n\r\n// // import { isValidEmail, isAtLeastSixCharacters } from \"../Validations/auth\";\r\n\r\n// // const LoginScreen = ({navigation}) => { \r\n// //     const [email, setEmail] = useState(\"\");\r\n// //     const [errorMail, setErrorMail] = useState(\"\");\r\n// //     const [password, setPassword] = useState(\"\");\r\n// //     const [errorPassword, setErrorPassword] = useState(\"\")\r\n// //     const [confirmPassword, setconfirmPassword] = useState(\"\");\r\n// //     const [errorConfirmPassword, setErrorConfirmPassword] = useState(\"\");\r\n\r\n// //     const [triggerLogin, result] = useLoginMutation()\r\n// //     const dispatch = useDispatch()\r\n// //     console.log(\"RRRRRRRRRRR\" , result);\r\n// //     useEffect(()=> {\r\n// //         if (result.isSuccess) {\r\n// //             dispatch(\r\n// //                 setUser({\r\n// //                     email: result.data.email,\r\n// //                     idToken: result.data.idToken\r\n// //                 })\r\n// //             )\r\n// //         }\r\n// //     }, [result])\r\n// //     const onSubmit = () => {\r\n// //         try {\r\n// //             //Submit logic with validations\r\n// //             const isValidVariableEmail = isValidEmail(email)\r\n// //             const isCorrectPassword = isAtLeastSixCharacters(password) \r\n\r\n// //             if (isValidVariableEmail && isCorrectPassword ) {\r\n// //                 const request = {\r\n// //                     email,\r\n// //                     password,\r\n// //                     returnSecureToken: true\r\n// //                 }\r\n// //                 triggerLogin(request)\r\n// //             }\r\n\r\n// //             if (!isValidVariableEmail) setErrorMail ('Email is not correct')\r\n// //             else setErrorMail('')\r\n// //             if (!isCorrectPassword) setErrorPassword ('Password must be at least 6 characters')\r\n// //             else setErrorPassword('') \r\n\r\n// //         } catch (err) {\r\n// //             console.log(\"Catch error\");\r\n// //             console.log(err.message);\r\n// //         }\r\n// //     }\r\n// //   return (\r\n// //     <View style={styles.main}>\r\n// //         <View style={styles.container}>\r\n// //             <Text style={styles.title}>Login to start</Text>\r\n// //             <InputForm \r\n// //                 label={\"email\"}\r\n// //                 onChange={setEmail}\r\n// //                 error={\"\"}\r\n// //             />\r\n// //             <InputForm \r\n// //                 label={\"password\"}\r\n// //                 onChange={setPassword}\r\n// //                 error={\"\"}\r\n// //                 isSecure={true}\r\n// //             />\r\n// //             <SubmitButton \r\n// //                 onPress={onSubmit}\r\n// //                 title = \"Send\"\r\n// //             />\r\n// //             <Text style={styles.sub}>Not have an account?</Text>\r\n// //             <Pressable onPress={()=> navigation.navigate('Signup')}>\r\n// //                 <Text style={styles.subLink}>Sign up</Text>\r\n// //             </Pressable>\r\n// //         </View>\r\n// //     </View>\r\n// //   )\r\n// // }\r\n\r\n// // export default LoginScreen\r\n\r\n// // const styles = StyleSheet.create({\r\n// //     main: {\r\n// //         width: '100%',\r\n// //         height: '100%',\r\n// //         justifyContent: 'center',\r\n// //         alignItems: 'center'\r\n// //     },\r\n// //     container: {\r\n// //         width: '90%',\r\n// //         flexDirection: 'column',\r\n// //         justifyContent: 'center',\r\n// //         alignItems: 'center',\r\n// //         backgroundColor: colors.lightPink,\r\n// //         gap: 15,\r\n// //         paddingVertical: 20,\r\n// //         borderRadius: 10,\r\n// //     },\r\n// //     title: {\r\n// //         fontSize: 22,\r\n// //         fontFamily: 'Josefin'\r\n// //     },\r\n// //     sub: {\r\n// //         fontSize: 14,\r\n// //         color: 'black',\r\n// //     },\r\n// //     subLink: {\r\n// //         fontSize: 14,\r\n// //         color: 'blue',\r\n// //     }\r\n// // })","import React from \"react\";\r\nimport Header from '../Components/Header'\r\n\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack'\r\nimport Cart from \"../Screens/Cart\";\r\nimport SignupScreen from \"../Screens/SignupScreen\";\r\nimport LoginScreen from \"../Screens/LoginScreen\";\r\n\r\nconst Stack = createNativeStackNavigator()\r\n\r\nconst AuthStack = () => {\r\n    return (\r\n        <Stack.Navigator\r\n            initialRouteName=\"Signup\"\r\n            screenOptions={({ route, navigation }) => ({\r\n                header: () => {\r\n                    return <Header route={route} navigation={navigation} />;\r\n                },\r\n            })}\r\n        >\r\n            <Stack.Screen name=\"Signup\" component={SignupScreen} />\r\n            <Stack.Screen name=\"Login\" component={LoginScreen} />\r\n        </Stack.Navigator>\r\n    );\r\n};\r\n\r\nexport default AuthStack;","import { Pressable, StyleSheet, Text } from \"react-native\";\r\nimport React from \"react\";\r\nimport { colors } from \"../Global/Colors\";\r\n\r\nconst AddButton = ({\r\n    title = \"\",\r\n    onPress = () => {},\r\n    color = colors.pink,\r\n}) => {\r\n    return (\r\n        <Pressable\r\n            style={{ ...styles.button, backgroundColor: color }}\r\n            onPress={onPress}\r\n        >\r\n            <Text style={styles.text}>{title}</Text>\r\n        </Pressable>\r\n    );\r\n};\r\n\r\nexport default AddButton;\r\n\r\nconst styles = StyleSheet.create({\r\n    button: {\r\n        width: \"80%\",\r\n        borderWidth: 1,\r\n        backgroundColor: colors.pink,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        padding: 8\r\n    },\r\n    text: { \r\n        fontSize: 18,\r\n        color: colors.lightPink,\r\n    },\r\n});\r\n","import { Image, Text, Pressable, StyleSheet, View } from \"react-native\";\r\nimport React, { useState } from \"react\";\r\nimport AddButton from \"../Components/AddButton\";\r\nimport * as ImagePicker from 'expo-image-picker'\r\nimport { useSelector } from \"react-redux\";\r\nimport { useGetProfileImageQuery } from \"../Services/shopServices\";\r\nimport { dropTableSessions } from \"../SQLite\";\r\nimport { useDispatch } from \"react-redux\"; \r\n\r\nconst MyProfile = ({navigation}) => {\r\n    // const {profileImage, imageCamera} = useSelector(state => state.authReducer.value);\r\n\r\n    const {localId, profileImage} = useSelector(state => state.userReducer.value)\r\n\r\n    const {data: image} = useGetProfileImageQuery(localId)\r\n\r\n    console.log(image);\r\n    const dispatch = useDispatch()\r\n\r\n    const cameraImage = image?.image\r\n\r\n    const launchCamera = async () => {\r\n        navigation.navigate('Image Selector')\r\n    };\r\n\r\n    const launchLocation = async () => {\r\n        navigation.navigate('List Address')\r\n    }\r\n\r\n    console.log(profileImage);\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            {profileImage || cameraImage  ? (\r\n                <Image\r\n                    source={{uri: profileImage || cameraImage}}\r\n                    style={styles.image}\r\n                    resizeMode=\"cover\"\r\n                />\r\n            ) : (\r\n                <Image\r\n                    source={require(\"../Assets/Images/defaultProfile.png\")}\r\n                    style={styles.image}\r\n                    resizeMode=\"cover\"\r\n                />\r\n            )}\r\n            <AddButton onPress={launchCamera} title=\"Add profile picture\" />\r\n            <AddButton onPress={launchLocation} title=\"My address\" />\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default MyProfile;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        padding: 10,\r\n        gap: 15,\r\n        alignItems: \"center\",\r\n        justifyContent: \"flex-start\",\r\n    },\r\n    image: {\r\n        width: 100,\r\n        height: 100,\r\n        borderRadius: 50,\r\n    },\r\n});\r\n\r\n\r\n// import { Image,Pressable, Text, StyleSheet, View } from \"react-native\";\r\n// import React, { useState } from \"react\";\r\n// import AddButton from \"../Components/AddButton\"; \r\n// import * as ImagePicker from 'expo-image-picker'\r\n\r\n// import { setUser } from \"../features/User/userSlice\";\r\n// import { useDispatch } from \"react-redux\";\r\n// import { useSelector } from \"react-redux\";\r\n// import { useGetProfileImageQuery } from \"../Services/shopServices\";\r\n\r\n// const MyProfile = ({navigation}) => {\r\n//     // const {profileImage, imageCamera} = useSelector(state => state.authReducer.value);\r\n\r\n//     const {localId, profileImage} = useSelector(state => state.userReducer.value)\r\n\r\n// /*     const {data: image} = useGetProfileImageQuery(localId)\r\n\r\n//     const cameraImage = image?.image */\r\n\r\n//     const launchCamera = async () => {\r\n//         navigation.navigate('Image Selector')\r\n//     };\r\n\r\n//     console.log(profileImage);\r\n\r\n\r\n// //////////////\r\n//     const dispatch = useDispatch()\r\n\r\n//     const logOut = () =>{\r\n//                 dispatch(\r\n//                     setUser({\r\n//                         email: \"\",\r\n//                         idToken: \"\"\r\n//                     })\r\n//                 )\r\n//             }\r\n\r\n//             //////////////\r\n\r\n//     return (\r\n//         <View style={styles.container}>\r\n//             {/* ////////////// */}\r\n\r\n//              <Pressable  onPress={logOut}  >\r\n//                 <Text  >LOG OUT</Text>\r\n//                     </Pressable>  \r\n//                     {/* ////////////// */}\r\n//             {profileImage ? (\r\n//                 <Image\r\n//                     source={{uri: profileImage}}\r\n//                     style={styles.image}\r\n//                     resizeMode=\"cover\"\r\n//                 />\r\n//             ) : (\r\n//                 <Image\r\n//                     source={require(\"../Assets/Images/defaultProfile.png\")}\r\n//                     style={styles.image}\r\n//                     resizeMode=\"cover\"\r\n//                 />\r\n//             )}\r\n//             <AddButton onPress={launchCamera} title=\"Add profile picture\" />\r\n//         </View>\r\n//     );\r\n// };\r\n\r\n// export default MyProfile;\r\n\r\n// const styles = StyleSheet.create({\r\n//     container: {\r\n//         padding: 10,\r\n//         gap: 15,\r\n//         alignItems: \"center\",\r\n//         justifyContent: \"flex-start\",\r\n//     },\r\n//     image: {\r\n//         width: 100,\r\n//         height: 100,\r\n//         borderRadius: 50,\r\n//     },\r\n// });\r\n","import React, { useState } from \"react\";\r\nimport { Image, View, StyleSheet, Text } from \"react-native\";\r\n// import * as ImagePicker from \"expo-image-picker\";\r\nimport AddButton from \"../Components/AddButton\";\r\nimport { colors } from \"../Global/Colors\";\r\n// import * as MediaLibrary from \"expo-media-library\";\r\nimport * as MediaLibrary from 'expo-media-library'\r\nimport * as ImagePicker from 'expo-image-picker'\r\nimport { usePostProfileImageMutation } from \"../Services/shopServices\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { saveImage } from \"../features/User/userSlice\";\r\n\r\nconst ImageSelector = ({ navigation }) => {\r\n    const [image, setImage] = useState(null);\r\n\r\n    const [triggerSaveImage, resultSaveImage] = usePostProfileImageMutation();\r\n    const dispatch = useDispatch();\r\n    const { localId } = useSelector((state) => state.userReducer.value);\r\n\r\n    const verifyCameraPermissions = async () => {\r\n        const { granted } = await ImagePicker.requestCameraPermissionsAsync();\r\n        if (!granted) {\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    const pickImage = async () => {\r\n\r\n        //Permission for camera\r\n        const isCameraOk = await verifyCameraPermissions();\r\n\r\n        if (isCameraOk) {\r\n            // No permissions request is necessary for launching the image library\r\n            let result = await ImagePicker.launchCameraAsync({\r\n                mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n                allowsEditing: true,\r\n                aspect: [1, 1],\r\n                //base64: true,\r\n                quality: 1,\r\n            });\r\n\r\n            console.log(result.assets);\r\n\r\n            if (!result.canceled) {\r\n                setImage(result.assets[0].uri);\r\n            }\r\n        }\r\n    };\r\n\r\n    const confirmImage = async () => {\r\n        // SI ES EN WEB, PARA PROBAR, DEJO ESTAS DOS LINEAS Y COMENTO TODO EL TRY ,CATCH\r\n        // dispatch(saveImage(image))\r\n        // navigation.goBack()\r\n        // SI NO ESTOY PROBANDO, PARA CELU, DEJAR ESTO: (TRY,CATCH)\r\n        try {\r\n            // Request device storage access permission\r\n            const { status } = await MediaLibrary.requestPermissionsAsync();  \r\n            console.log(\"STATUSSSS\", status);\r\n            if (status === \"granted\") {\r\n                console.log(\"Only valid on emulators and physical devices\");\r\n                // Save image to media library and create an asset\r\n                const response = await MediaLibrary.createAssetAsync(image);\r\n                console.log(\"URI ????\",response.uri);\r\n                //Save image link on profileImages remote location\r\n                triggerSaveImage({\r\n                    image: response.uri,\r\n                    localId: localId,\r\n                });\r\n                // Set image on redux state\r\n                dispatch(saveImage(response.uri));\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        navigation.goBack();\r\n    };\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            {image ? (\r\n                <>\r\n                    <Image source={{ uri: image }} style={styles.image} />\r\n                    <AddButton title=\"Take another photo\" onPress={pickImage} />\r\n                    <AddButton title=\"Confirm photo\" onPress={confirmImage} />\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <View style={styles.noPhotoContainer}>\r\n                        <Text>No photo to show...</Text>\r\n                    </View>\r\n                    <AddButton title=\"Take a photo\" onPress={pickImage} />\r\n                </>\r\n            )}\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default ImageSelector;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        alignItems: \"center\",\r\n        justifyContent: \"flex-start\",\r\n        gap: 20,\r\n        marginTop: 20,\r\n    },\r\n    image: {\r\n        width: 200,\r\n        height: 200,\r\n    },\r\n    noPhotoContainer: {\r\n        width: 200,\r\n        height: 200,\r\n        borderWidth: 2,\r\n        borderColor: colors.red,\r\n        padding: 10,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n    },\r\n});\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n// import { Image, View, StyleSheet, Text } from \"react-native\";\r\n// import * as ImagePicker from \"expo-image-picker\";\r\n// import AddButton from \"../Components/AddButton\";\r\n// import { colors } from \"../Global/Colors\";\r\n// // import * as MediaLibrary from 'expo-media-'\r\n// import * as MediaLibrary from \"expo-media-library\";\r\n// import { usePostProfileImageMutation } from \"../Services/shopServices\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import { saveImage } from '../features/User/userSlice' \r\n\r\n// const ImageSelector = ({ navigation }) => {\r\n//     const [image, setImage] = useState(null);\r\n\r\n//   const [triggerSaveImage, resultSaveImage] = usePostProfileImageMutation();\r\n//     const dispatch = useDispatch();\r\n//     const { localId } = useSelector((state) => state.userReducer.value); \r\n\r\n//     const verifyCameraPermissions = async () => {\r\n//         const { granted } = await ImagePicker.requestCameraPermissionsAsync();\r\n//         if (!granted) {\r\n//             return false;\r\n//         }\r\n//         return true;\r\n//     };\r\n\r\n//     const pickImage = async () => {\r\n//         const isCameraOk = await verifyCameraPermissions();\r\n//         if (isCameraOk) {\r\n//             // No permissions request is necessary for launching the image library\r\n//             let result = await ImagePicker.launchCameraAsync({\r\n//                 mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n//                 allowsEditing: true,\r\n//                 aspect: [9, 16],\r\n//                 //base64: true,\r\n//                 quality: 1,\r\n//             });\r\n\r\n//             console.log(result.assets);\r\n\r\n//             if (!result.canceled) {\r\n//                 setImage(result.assets[0].uri);\r\n//             }\r\n//         }\r\n//     };\r\n\r\n//     const confirmImage = async () => {\r\n//           try {\r\n//             // Request device storage access permission\r\n//             const { status } = await MediaLibrary.requestPermissionsAsync();\r\n//             if (status === \"granted\") {\r\n//                 console.log(\"Only valid on emulators and physical devices\");\r\n//                 // Save image to media library and create an asset\r\n//                 const response = await MediaLibrary.createAssetAsync(image);\r\n//                 console.log(response.uri);\r\n//                 //Save image link on profileImages remote location\r\n//                 triggerSaveImage({\r\n//                     image: response.uri,\r\n//                     localId: localId,\r\n//                 });\r\n//                 // Set image on redux state\r\n//                 dispatch(saveImage(response.uri));\r\n//             }\r\n//         } catch (error) {\r\n//             console.log(error);\r\n//         }\r\n//         navigation.goBack(); \r\n//     };\r\n\r\n//     return (\r\n//         <View style={styles.container}>\r\n//             {image ? (\r\n//                 <>\r\n//                     <Image source={{ uri: image }} style={styles.image} />\r\n//                     <AddButton title=\"Take another photo\" onPress={pickImage} />\r\n//                     <AddButton title=\"Confirm photo\" onPress={confirmImage} />\r\n//                 </>\r\n//             ) : (\r\n//                 <>\r\n//                     <View style={styles.noPhotoContainer}>\r\n//                         <Text>No photo to show...</Text>\r\n//                     </View>\r\n//                     <AddButton title=\"Take a photo\" onPress={pickImage} />\r\n//                 </>\r\n//             )}\r\n//         </View>\r\n//     );\r\n// };\r\n\r\n// export default ImageSelector;\r\n\r\n// const styles = StyleSheet.create({\r\n//     container: {\r\n//         flex: 1,\r\n//         alignItems: \"center\",\r\n//         justifyContent: \"flex-start\",\r\n//         gap: 20,\r\n//         marginTop: 20,\r\n//     },\r\n//     image: {\r\n//         width: 200,\r\n//         height: 200,\r\n//     },\r\n//     noPhotoContainer: {\r\n//         width: 200,\r\n//         height: 200,\r\n//         borderWidth: 2,\r\n//         borderColor: colors.red,\r\n//         padding: 10,\r\n//         justifyContent: \"center\",\r\n//         alignItems: \"center\",\r\n//     },\r\n// });\r\n","import { Pressable, StyleSheet, Text, View } from \"react-native\";\r\nimport { Entypo } from \"@expo/vector-icons\";\r\nimport React from \"react\";\r\nimport { colors } from \"../Global/Colors\";\r\n\r\nconst AddressItem = ({ location, navigation }) => {\r\n\r\n    const onChangeLocation = () => {\r\n        navigation.navigate('Location Selector')\r\n    }\r\n\r\n    return (\r\n        <View style={styles.card} onPress={() => {}}>\r\n            <View style={styles.textContainer}>\r\n                <Text style={styles.text}>\r\n                    {location.address}\r\n                </Text>\r\n            </View>\r\n            <Pressable onPress={onChangeLocation}>\r\n                <Entypo name=\"location\" size={30} color=\"black\">\r\n                    <Text style={styles.text2}>Change</Text>\r\n                </Entypo>\r\n            </Pressable>\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default AddressItem;\r\n\r\nconst styles = StyleSheet.create({\r\n    card: {\r\n        height: 100,\r\n        backgroundColor: colors.red,\r\n        padding: 10,\r\n        margin: 10,\r\n        borderWidth: 2,\r\n        borderRadius: 10,\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\",\r\n    },\r\n    textContainer: {\r\n        width: \"70%\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"flex-start\",\r\n        alignItems: \"flex-start\",\r\n    },\r\n    text: {\r\n        fontFamily: \"Josefin\",\r\n        fontSize: 17,\r\n        color: \"black\",\r\n    },\r\n    text2: {\r\n        fontFamily: \"Josefin\",\r\n        fontSize: 19,\r\n        color: colors.pink,\r\n    },\r\n});","import { StyleSheet, Text, View } from \"react-native\";\r\nimport React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport AddButton from \"../Components/AddButton\";\r\nimport AddressItem from '../Components/AddressItem'\r\nimport { useGetUserLocationQuery } from \"../Services/shopServices\";\r\n\r\nconst ListAddress = ({ navigation }) => {\r\n    const { location, localId } = useSelector((state) => state.userReducer.value);\r\n    const {data:userLocationQuery, isError, isLoading} = useGetUserLocationQuery(localId)\r\n  \r\n \r\n    return location?.latitude || userLocationQuery ? (\r\n        <AddressItem \r\n        location={location?.latitude ? location: userLocationQuery}\r\n        navigation={navigation} />\r\n    ) : (\r\n        <View style = {styles.container}>\r\n            <Text style={styles.text}>No location set</Text>\r\n            <AddButton\r\n                title=\"Set location\"\r\n                onPress={() => navigation.navigate(\"Location Selector\")}\r\n            />\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default ListAddress;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        justifyContent: 'flex-start',\r\n        alignItems: 'center'\r\n    },\r\n    text: {\r\n        paddingVertical: 20,\r\n        fontFamily: 'Josefin',\r\n        fontSize: 18\r\n    }\r\n});","import { Image, StyleSheet, View } from \"react-native\";\r\nimport React from \"react\";\r\nimport { google_maps_api_key } from \"../Database/firebaseConfig\";\r\n\r\nconst MapPreview = ({ location }) => {\r\n\r\n    const mapPreviewUrl = `https://maps.googleapis.com/maps/api/staticmap?center=${location.latitude},${location.longitude}&zoom=15&size=450x450&maptype=roadmap&markers=color:red%7Clabel:Me%7C${location.latitude},${location.longitude}&key=${google_maps_api_key}`;\r\n\r\n    return (\r\n        <View style={styles.mapPreview}>\r\n            <Image style={styles.mapImage} source={{ uri: mapPreviewUrl }} />\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default MapPreview;\r\n\r\nconst styles = StyleSheet.create({\r\n    mapPreview: {\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n    },\r\n    mapImage: {\r\n        width: 300,\r\n        height: 300,\r\n    },\r\n});","import { StyleSheet, Text, View } from \"react-native\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport * as Location from \"expo-location\";\r\nimport AddButton from \"../Components/AddButton\";\r\nimport { usePostUserLocationMutation } from \"../Services/shopServices\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setUserLocation } from \"../features/User/userSlice\";\r\nimport { colors } from \"../Global/Colors\";\r\nimport MapPreview from \"../Components/MapPreview\";\r\nimport { google_maps_api_key } from \"../Database/firebaseConfig\";\r\n\r\nconst LocationSelector = ({ navigation }) => {\r\n\r\n    const [location, setLocation] = useState({ latitude: \"\", longitude: \"\" });\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const [address, setAddress] = useState(null);\r\n\r\n    const {localId} = useSelector(state => state.userReducer.value)\r\n    const [triggerPostAddress, result] = usePostUserLocationMutation();\r\n    const dispatch = useDispatch(); \r\n\r\n    const onConfirmAddress = () => {\r\n         const locationFormatted = {\r\n            latitude: location.latitude,\r\n            longitude: location.longitude,\r\n            address: address\r\n        }\r\n        dispatch(setUserLocation(locationFormatted))\r\n        \r\n        triggerPostAddress({location: locationFormatted, localId})  \r\n    }\r\n    \r\n    //Location requested on mount\r\n    useEffect(() => {\r\n        (async () => {\r\n            try {\r\n                let { status } = await Location.requestForegroundPermissionsAsync();\r\n                if (status !== \"granted\") {\r\n                    setError(\"Permission to access location was denied\");\r\n                    return;\r\n                }\r\n    \r\n                let location = await Location.getCurrentPositionAsync({});\r\n                setLocation({\r\n                    latitude: location.coords.latitude,\r\n                    longitude: location.coords.longitude,\r\n                });\r\n                \r\n            } catch (error) {\r\n                console.log(error.message);\r\n                setError(error.message)\r\n            }\r\n        })();\r\n    }, []);\r\n\r\n    //Reverse geocoding\r\n    useEffect(() => {\r\n        (async () => {\r\n            try {\r\n                if (location.latitude) {\r\n                    const url_reverse_geocode = `https://maps.googleapis.com/maps/api/geocode/json?latlng=${location.latitude},${location.longitude}&key=${google_maps_api_key}`;\r\n                    const response = await fetch(url_reverse_geocode);\r\n                    const data = await response.json();\r\n                    // console.warn(data);\r\n                    setAddress(data.results[0].formatted_address);\r\n                }\r\n            } catch (error) {\r\n                setError(error.message);\r\n            }\r\n        })();\r\n    }, [location]);\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <Text\r\n                style = {styles.text}\r\n            >My Address</Text>\r\n            {/* Flatlist con las directions */}\r\n            {location ? (\r\n                <>\r\n                    <Text \r\n                        style = {styles.text}\r\n                    >Lat: {location.latitude}, long: {location.longitude}.\r\n                    </Text>\r\n                    <MapPreview location={location} />\r\n                    <Text style={styles.address}>\r\n                        Adress: {address}\r\n                    </Text>\r\n                    <AddButton\r\n                        onPress={onConfirmAddress}\r\n                        title=\"Confirm address\"\r\n                    />\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <View style={styles.noLocationContainer}>\r\n                        <Text>{error}</Text>\r\n                    </View>\r\n                </>\r\n            )}\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default LocationSelector;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        alignItems: \"center\",\r\n        justifyContent: \"flex-start\",\r\n    },\r\n    text: {\r\n        paddingTop: 20,\r\n        fontFamily: 'Josefin',\r\n        fontSize: 18\r\n    },\r\n    noLocationContainer: {\r\n        width: 200,\r\n        height: 200,\r\n        borderWidth: 2,\r\n        borderColor: colors.peach,\r\n        padding: 10,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n    },\r\n    address: {\r\n        padding: 10,\r\n        // fontFamily: \"Ubuntu\",\r\n        fontSize: 16,\r\n    },\r\n});","import React from \"react\";\r\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\nimport Header from \"../Components/Header\";\r\nimport MyProfile from \"../Screens/MyProfile\";\r\nimport ImageSelector from \"../Screens/ImageSelector\";\r\nimport ListAddress from \"../Screens/ListAddress\";\r\nimport LocationSelector from \"../Screens/LocationSelector\";\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nconst MyProfileStack = () => {\r\n    return (\r\n        <Stack.Navigator\r\n            initialRouteName=\"My Profile\"\r\n            screenOptions={({ route, navigation }) => ({\r\n                header: () => {\r\n                    return <Header route={route} navigation={navigation} />;\r\n                },\r\n            })}\r\n        >\r\n            <Stack.Screen name=\"My Profile\" component={MyProfile} />\r\n            <Stack.Screen name=\"Image Selector\" component={ImageSelector} />\r\n            <Stack.Screen name=\"List Address\" component={ListAddress}/>\r\n            <Stack.Screen name=\"Location Selector\" component={LocationSelector} />\r\n        </Stack.Navigator>\r\n    );\r\n};\r\n\r\nexport default MyProfileStack;","import {\r\n    Platform,\r\n    Pressable,\r\n    SafeAreaView,\r\n    StyleSheet,\r\n    Text,\r\n    View,\r\n} from \"react-native\";\r\nimport React, { useEffect } from \"react\";\r\n\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { StatusBar } from \"react-native\";\r\nimport ShopStack from \"./ShopStack\";\r\nimport CartStack from \"./CartStack\";\r\n\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport { colors } from \"../Global/Colors\";\r\nimport {\r\n    Ionicons,\r\n    Fontisto,\r\n    Foundation,\r\n    FontAwesome5,\r\n} from \"@expo/vector-icons\";\r\nimport OrderStack from \"./OrderStack\";\r\nimport AuthStack from \"./AuthStack\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport MyProfileStack from \"./MyProfileStack\";\r\nimport { getSession } from \"../SQLite\";\r\nimport { setUser } from \"../features/User/userSlice\";\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nconst Navigator = () => {\r\n    const { email, localId } = useSelector((state) => state.userReducer.value);\r\n    \r\n    const dispatch = useDispatch()\r\n\r\n    //Get stored sessions\r\n     useEffect(()=> {\r\n        (async ()=> {\r\n            try {\r\n                console.log('Getting session...');\r\n                const session = await getSession()\r\n                console.log('Sesion: ');\r\n                console.log(session);\r\n                if (session?.rows.length) {\r\n                    const user = session.rows._array[0]\r\n                    dispatch(setUser(user))\r\n                }\r\n            } catch (error) {\r\n                console.log('Error getting session');\r\n                console.log(error.message);\r\n            }\r\n        })()\r\n    }, [])  \r\n\r\n    return (\r\n        <SafeAreaView style={styles.container}>\r\n            <NavigationContainer>\r\n                {email ? (\r\n                    <Tab.Navigator\r\n                        screenOptions={{\r\n                            headerShown: false,\r\n                            tabBarShowLabel: false,\r\n                            tabBarStyle: styles.tabBar,\r\n                        }}\r\n                    >\r\n                        <Tab.Screen\r\n                            name=\"Shop\"\r\n                            component={ShopStack}\r\n                            options={{\r\n                                tabBarIcon: ({ focused }) => {\r\n                                    return (\r\n                                        <View>\r\n                                            <Fontisto\r\n                                                name=\"shopping-store\"\r\n                                                size={24}\r\n                                                color={\r\n                                                    focused ? \"black\" : \"gray\"\r\n                                                }\r\n                                            />\r\n                                        </View>\r\n                                    );\r\n                                },\r\n                            }}\r\n                        />\r\n                        <Tab.Screen\r\n                            name=\"Cart\"\r\n                            component={CartStack}\r\n                            options={{\r\n                                tabBarIcon: ({ focused }) => {\r\n                                    return (\r\n                                        <View>\r\n                                            <Foundation\r\n                                                name=\"shopping-cart\"\r\n                                                size={30}\r\n                                                color={\r\n                                                    focused ? \"black\" : \"gray\"\r\n                                                }\r\n                                            />\r\n                                        </View>\r\n                                    );\r\n                                },\r\n                            }}\r\n                        />\r\n                        <Tab.Screen\r\n                            name=\"Orders\"\r\n                            component={OrderStack}\r\n                            options={{\r\n                                tabBarIcon: ({ focused }) => {\r\n                                    return (\r\n                                        <View>\r\n                                            <FontAwesome5\r\n                                                name=\"list-ul\"\r\n                                                size={24}\r\n                                                color={\r\n                                                    focused ? \"black\" : \"gray\"\r\n                                                }\r\n                                            />\r\n                                        </View>\r\n                                    );\r\n                                },\r\n                            }}\r\n                        />\r\n                        <Tab.Screen\r\n                            name=\"MyProfile\"\r\n                            component={MyProfileStack}\r\n                            options={{\r\n                                tabBarIcon: ({ focused }) => {\r\n                                    return (\r\n                                        <View style={styles.item}>\r\n                                            <Ionicons\r\n                                                name=\"person-circle-outline\"\r\n                                                size={24}\r\n                                                color={\r\n                                                    focused ? \"black\" : \"gray\"\r\n                                                }\r\n                                            />\r\n                                        </View>\r\n                                    );\r\n                                },\r\n                            }}\r\n                        />\r\n                    </Tab.Navigator>\r\n                ) : (\r\n                    <AuthStack />\r\n                )}\r\n            </NavigationContainer>\r\n        </SafeAreaView>\r\n    );\r\n};\r\n\r\nexport default Navigator;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        paddingTop: Platform.OS === \"android\" ? StatusBar.currentHeight : 0,\r\n    },\r\n    tabBar: {\r\n        backgroundColor: colors.pink,\r\n        shadowColor: \"black\",\r\n        height: 60,\r\n    },\r\n});\r\n\r\n// import { Platform, Pressable, SafeAreaView, StyleSheet, Text, View } from 'react-native'\r\n// import React from 'react'\r\n// import { NavigationContainer } from '@react-navigation/native'\r\n// import { StatusBar } from 'react-native'\r\n// import ShopStack from './ShopStack'\r\n// import CartStack from './CartStack'\r\n\r\n// import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\n// import { colors } from '../Global/Colors'\r\n// import { \r\n//     Ionicons,\r\n//     Fontisto,\r\n//     Foundation,\r\n//     FontAwesome5\r\n// } from '@expo/vector-icons';\r\n// import OrderStack from './OrderStack'\r\n// import AuthStack from './AuthStack'\r\n// import { useSelector } from 'react-redux'\r\n// import MyProfileStack from './MyProfileStack'\r\n\r\n// const Tab = createBottomTabNavigator()\r\n\r\n// const Navigator = () => {\r\n\r\n//     const {email} = useSelector(state => state.userReducer.value)\r\n//   return (\r\n//     <SafeAreaView style = {styles.container}>\r\n//         <NavigationContainer>\r\n//             {\r\n//                 email ? \r\n//                 <Tab.Navigator\r\n//                     screenOptions={{\r\n//                         headerShown: false,\r\n//                         tabBarShowLabel: false,\r\n//                         tabBarStyle: styles.tabBar,\r\n//                     }}\r\n//                 >\r\n//                     <Tab.Screen \r\n//                         name='Shop'\r\n//                         component={ShopStack}\r\n//                         options={{\r\n//                             tabBarIcon: ({focused}) => {\r\n//                                 return (\r\n//                                     <View>\r\n//                                         <Fontisto name=\"shopping-store\" size={24} color={focused ? \"black\": \"gray\"} />\r\n//                                     </View>\r\n//                                 )\r\n//                             }\r\n//                         }}\r\n//                     />\r\n//                     <Tab.Screen\r\n//                         name='Cart'\r\n//                         component={CartStack}\r\n//                         options={{\r\n//                             tabBarIcon: ({focused}) => {\r\n//                                 return (\r\n//                                     <View>\r\n//                                         <Foundation name=\"shopping-cart\" size={30} color={focused ? \"black\": \"gray\"} />    \r\n//                                     </View>\r\n//                                 )\r\n//                             }\r\n//                         }}\r\n//                     />\r\n//                     <Tab.Screen\r\n//                         name='Orders'\r\n//                         component={OrderStack}\r\n//                         options={{\r\n//                             tabBarIcon: ({focused}) => {\r\n//                                 return (\r\n//                                     <View>\r\n//                                         <FontAwesome5 name=\"list-ul\" size={24} color={focused ? \"black\": \"gray\"} />\r\n//                                     </View>\r\n//                                 )\r\n//                             }\r\n//                         }}\r\n//                     />\r\n//                     <Tab.Screen\r\n//                         name=\"MyProfile\"\r\n//                         component={MyProfileStack}\r\n//                         options={{\r\n//                             tabBarIcon: ({ focused }) => {\r\n//                                 return (\r\n//                                     <View style={styles.item}>\r\n//                                         <Ionicons\r\n//                                             name=\"person-circle-outline\"\r\n//                                             size={24}\r\n//                                             color={\r\n//                                                 focused\r\n//                                                     ? 'black'\r\n//                                                     : 'gray'\r\n//                                             }\r\n//                                         />\r\n//                                     </View>\r\n//                                 );\r\n//                             },\r\n//                         }}\r\n//                     />\r\n//                 </Tab.Navigator>\r\n//                 :<AuthStack/>\r\n//             }\r\n//         </NavigationContainer>\r\n//     </SafeAreaView>\r\n//   )\r\n// }\r\n\r\n// export default Navigator\r\n\r\n// const styles = StyleSheet.create({\r\n//     container: {\r\n//       flex: 1,\r\n//       paddingTop: Platform.OS === \"android\" ? StatusBar.currentHeight : 0\r\n//     },\r\n//     tabBar: {\r\n//         backgroundColor: colors.pink,\r\n//         shadowColor: 'black',\r\n//         height: 60,\r\n//     }\r\n//   })\r\n\r\n\r\n// // import { Platform, Pressable, SafeAreaView, StyleSheet, Text, View } from 'react-native'\r\n// // import React from 'react'\r\n\r\n// // import { NavigationContainer } from '@react-navigation/native'\r\n// // import { StatusBar } from 'react-native'\r\n// // import ShopStack from './ShopStack'\r\n// // import CartStack from './CartStack'\r\n// // import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\n// // import { colors } from '../Global/Colors'\r\n// // import { \r\n// //     Ionicons,\r\n// //     Fontisto,\r\n// //     Foundation, \r\n// //     FontAwesome5\r\n// // } from '@expo/vector-icons';\r\n// // import OrderStack from './OrderStack'\r\n// // import AuthStack from './AuthStack'\r\n// // import { useSelector } from 'react-redux'\r\n// // import MyProfileStack from './MyProfileStack'\r\n\r\n// // const Tab = createBottomTabNavigator()\r\n\r\n// // const Navigator = () => {\r\n\r\n    \r\n\r\n// //     const {email} = useSelector(state => state.userReducer.value)\r\n// //   return (\r\n// //     <SafeAreaView style = {styles.container}>\r\n// //         <NavigationContainer>\r\n// //             {\r\n// //                 email ? <>\r\n// //                 <Tab.Navigator\r\n// //                     screenOptions={{\r\n// //                         headerShown: false,\r\n// //                         tabBarShowLabel: false,\r\n// //                         tabBarStyle: styles.tabBar,\r\n// //                     }}\r\n// //                 >\r\n// //                     <Tab.Screen \r\n// //                         name='Shop'\r\n// //                         component={ShopStack}\r\n// //                         options={{\r\n// //                             tabBarIcon: ({focused}) => {\r\n// //                                 return (\r\n// //                                     <View>\r\n// //                                         <Fontisto name=\"shopping-store\" size={24} color={focused ? \"black\": \"gray\"} />\r\n// //                                     </View>\r\n// //                                 )\r\n// //                             }\r\n// //                         }}\r\n// //                     />\r\n// //                     <Tab.Screen\r\n// //                         name='Cart'\r\n// //                         component={CartStack}\r\n// //                         options={{\r\n// //                             tabBarIcon: ({focused}) => {\r\n// //                                 return (\r\n// //                                     <View>\r\n// //                                         <Foundation name=\"shopping-cart\" size={30} color={focused ? \"black\": \"gray\"} />    \r\n// //                                     </View>\r\n// //                                 )\r\n// //                             }\r\n// //                         }}\r\n// //                     />\r\n// //                     <Tab.Screen\r\n// //                         name='Orders'\r\n// //                         component={OrderStack}\r\n// //                         options={{\r\n// //                             tabBarIcon: ({focused}) => {\r\n// //                                 return (\r\n// //                                     <View>\r\n// //                                         <FontAwesome5 name=\"list-ul\" size={24} color={focused ? \"black\": \"gray\"} />\r\n// //                                     </View>\r\n// //                                 )\r\n// //                             }\r\n// //                         }}\r\n// //                     />\r\n// //                     <Tab.Screen\r\n// //                         name=\"MyProfile\"\r\n// //                         component={MyProfileStack}\r\n// //                         options={{\r\n// //                             tabBarIcon: ({ focused }) => {\r\n// //                                 return (\r\n// //                                     <View style={styles.item}>\r\n// //                                         <Ionicons\r\n// //                                             name=\"person-circle-outline\"\r\n// //                                             size={24}\r\n// //                                             color={\r\n// //                                                 focused\r\n// //                                                     ? 'black'\r\n// //                                                     : 'gray'\r\n// //                                             }\r\n// //                                         />\r\n// //                                     </View>\r\n// //                                 );\r\n// //                             },\r\n// //                         }}\r\n// //                     />\r\n// //                 </Tab.Navigator>\r\n// //                </> :<AuthStack/>\r\n// //             }\r\n// //         </NavigationContainer>\r\n// //     </SafeAreaView>\r\n// //   )\r\n// // }\r\n\r\n// // export default Navigator\r\n\r\n// // const styles = StyleSheet.create({\r\n// //     container: {\r\n// //       flex: 1,\r\n// //       paddingTop: Platform.OS === \"android\" ? StatusBar.currentHeight : 0\r\n// //     },\r\n// //     tabBar: {\r\n// //         backgroundColor: colors.pink,\r\n// //         shadowColor: 'black',\r\n// //         height: 60,\r\n// //     }\r\n// //   })\r\n\r\n\r\n  \r\n// // // import { StatusBar } from 'expo-status-bar';\r\n// // import Header from '../Components/Header';\r\n// // import Home from '../Screens/Home';\r\n// // import ItemListCategory from '../Screens/ItemListCategory';\r\n// // import { useState } from 'react';\r\n// // import ItemDetail from '../Screens/ItemDetail';\r\n// // import ShopStack from './ShopStack';\r\n// // import { AntDesign } from '@expo/vector-icons';\r\n// // import { Entypo } from '@expo/vector-icons';\r\n// // import React from 'react'\r\n// // import { StyleSheet, Pressable, Text, View, SafeAreaView, StatusBar, Platform } from 'react-native';\r\n// // import { NavigationContainer } from '@react-navigation/native'; \r\n// // import { \r\n// //     Ionicons,\r\n// //     Fontisto,\r\n// //     Foundation,\r\n// //     FontAwesome5\r\n// // } from '@expo/vector-icons';\r\n// // import CartStack from './CartStack';\r\n// // import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\n// // import { FontAwesome } from '@expo/vector-icons';\r\n// // import OrderScreen from '../Screens/OrderScreen';\r\n// // import OrderStack from './OrderStack'; \r\n// // import { useSelector } from 'react-redux';\r\n// // import { useDispatch } from \"react-redux\";\r\n// // import { setUser } from \"../features/User/userSlice\";\r\n \r\n// // import AuthStack from './AuthStack' \r\n// // import MyProfileStack from './MyProfileStack'\r\n\r\n// // const Tab = createBottomTabNavigator()\r\n\r\n// // const Navigator = () => {\r\n    \r\n// //     const dispatch = useDispatch()\r\n// //     const {email} = useSelector(state=> state.userReducer.value) \r\n\r\n// //     const logOut = () =>{\r\n// //         dispatch(\r\n// //             setUser({\r\n// //                 email: \"\",\r\n// //                 idToken: \"\"\r\n// //             })\r\n// //         )\r\n// //     }\r\n    \r\n    \r\n\r\n\r\n   \r\n// //     return (\r\n// //         <SafeAreaView style={styles.container}>\r\n        \r\n        \r\n// //        <NavigationContainer>\r\n// //         { email ? <>\r\n        \r\n// //             <Pressable  onPress={logOut} style={styles.logout}>\r\n// //                     <Text  >LOG OUT</Text>\r\n// //                         </Pressable>        \r\n                        \r\n// //               <Tab.Navigator \r\n// //                 screenOptions={{ \r\n// //                     headerShown: false,\r\n// //                     tabBarShowLabel: false,\r\n// //                     tabBarStyle:  styles.tabBar\r\n// //                     }} \r\n                   \r\n// //                 >\r\n                    \r\n                   \r\n// //                     <Tab.Screen\r\n// //                     name='Shop'\r\n// //                     component={ShopStack}\r\n// //                     options={{tabBarIcon: ({focused}) => {\r\n// //                         return (\r\n// //                             <View>\r\n// //                              <Entypo name=\"shop\" size={30} color={focused ? \"black\" : \"gray\"} />\r\n// //                             </View>\r\n// //                         )\r\n// //                     }}}\r\n// //                     />  \r\n// //                     <Tab.Screen\r\n// //                     name='Cart'\r\n// //                     component={CartStack}\r\n// //                     options={{tabBarIcon: ({focused}) => {\r\n// //                         return (\r\n// //                             <View>\r\n// //                             <AntDesign name=\"shoppingcart\" size={30} color={focused ? \"black\" : \"gray\"} />\r\n// //                              </View>\r\n// //                         )\r\n// //                     }}}\r\n// //                     />   \r\n// //                     <Tab.Screen\r\n// //                     name='Orders'\r\n// //                     component={OrderStack}\r\n// //                     options={{tabBarIcon: ({focused}) => {\r\n// //                         return (\r\n// //                             <View>\r\n// //                           <FontAwesome name=\"list-ol\" size={24} color={focused ? \"black\" : \"gray\"} />\r\n// //                              </View>\r\n// //                         )\r\n// //                     }}}\r\n// //                     />   \r\n// //                     <Tab.Screen\r\n// //                         name=\"MyProfile\"\r\n// //                         component={MyProfileStack}\r\n// //                         options={{\r\n// //                             tabBarIcon: ({ focused }) => {\r\n// //                                 return (\r\n// //                                     <View style={styles.item}>\r\n// //                                         <Ionicons\r\n// //                                             name=\"person-circle-outline\"\r\n// //                                             size={24}\r\n// //                                             color={\r\n// //                                                 focused\r\n// //                                                     ? 'black'\r\n// //                                                     : 'gray'\r\n// //                                             }\r\n// //                                         />\r\n// //                                     </View>\r\n// //                                 );\r\n// //                             },\r\n// //                         }}\r\n// //                     />\r\n// //                 </Tab.Navigator>\r\n// //                 </>\r\n// //             : \r\n// //             <AuthStack></AuthStack>\r\n// //         }\r\n        \r\n// //             </NavigationContainer>\r\n// //         </SafeAreaView>\r\n// //     )\r\n// // }\r\n \r\n// // export default Navigator\r\n\r\n// // const styles = StyleSheet.create({\r\n// //     container: {\r\n// //         zoom:\"85%\", // despues borrar el zoom\r\n// //         flex: 1,\r\n// //         paddingTop: Platform.OS === 'android' ? StatusBar.currentHight : 0\r\n// //     },\r\n// //     logout:{\r\n// //         padding:\"2px\",\r\n// //         textAlignlign: \"center\",\r\n// //         backgroundColor:\"red\",\r\n// //         color: \"black\"\r\n// //     },\r\n// //     tabBar: {\r\n// //         backgroundColor: 'pink',\r\n// //         shadowColor: 'black',\r\n// //         elevation: 3,\r\n// //         position: 'absolute',\r\n// //         bottom: 20,\r\n// //         left: 10,\r\n// //         right: 10,\r\n// //         borderRadius: 15,\r\n// //         height: 60,\r\n// //     }\r\n\r\n// // })"," \r\nimport {configureStore, getDefaultMiddleware} from '@reduxjs/toolkit'\r\nimport counterReducer from '../features/Counter/counterSlice'\r\nimport shopReducer from '../features/Shop/shopSlice' \r\nimport cartReducer from '../features/Cart/cartSlice'\r\nimport userReducer from '../features/User/userSlice'\r\nimport { shopApi } from '../Services/shopServices'\r\nimport { setupListeners } from '@reduxjs/toolkit/dist/query'\r\nimport { authApi } from '../Services/authServices'\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        counterReducer,\r\n        shopReducer,\r\n        cartReducer,\r\n        userReducer,\r\n        [shopApi.reducerPath]: shopApi.reducer, \r\n        [authApi.reducerPath]: authApi.reducer,\r\n    },\r\n    middleware: (getDefaultMiddleware) => \r\n        getDefaultMiddleware().concat(shopApi.middleware, authApi.middleware),\r\n})\r\n\r\nsetupListeners(store.dispatch)\r\n\r\nexport default store\r\n ","import { useFonts } from 'expo-font';\nimport Navigator from './src/Navigation/Navigator';\nimport { Provider } from 'react-redux';\nimport store from './src/Store/store';\nimport { init } from './src/SQLite';\nimport { useEffect } from 'react';\n\n\nexport default function App() {\n  \n  // ESTE USE EFFECT SE SE GENERA AL PRINCIPIO\n  useEffect(()=> {   \n    init()\n      .then((result)=> { \n        console.log(result);\n      })\n      .catch(err => { \n        console.log(err.message);\n    })\n  }, [])\n  \n  const [fontsLoaded] = useFonts({\n    'Josefin': require('./src/Assets/Fonts/Josefin_Sans/JosefinSans-Regular.ttf'), \n  });\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <Provider store={store}>\n      <Navigator/>\n    </Provider>\n  );\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [817], () => (__webpack_require__(9484)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["colors","userSlice","createSlice","name","initialState","value","email","idToken","localId","profileImage","location","latitude","longitude","reducers","setUser","state","action","payload","signOut","saveImage","setUserLocation","_userSlice$actions","actions","db","SQLite","init","Promise","res","rej","transaction","tx","executeSql","_","result","error","_ref","title","route","navigation","params","category","dispatch","useDispatch","_useSelector","useSelector","userReducer","onSignout","_ref2","_asyncToGenerator","console","log","response","acc","deleteSession","message","apply","arguments","_jsxs","View","style","styles","containerHeader","children","_jsx","Text","text","canGoBack","Pressable","pressable","onPress","goBack","AntDesign","size","color","SimpleLineIcons","StyleSheet","create","backgroundColor","flexDirection","justifyContent","alignItems","paddingVertical","position","fontSize","right","top","left","api_key","google_maps_api_key","shopApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCategories","query","getProducts","getProductsByCategory","transformResponse","Object","values","getProductById","productId","pop","postCart","mutation","order","url","method","body","getProfileImage","postProfileImage","image","getUserLocation","postUserLocation","address","useGetCategoriesQuery","useGetProductsByCategoryQuery","useGetProductsQuery","usePostCartMutation","useGetProductByIdQuery","useGetProfileImageQuery","usePostProfileImageMutation","useGetUserLocationQuery","usePostUserLocationMutation","_ref$additionalStyle","additionalStyle","cardContainer","height","width","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","borderWidth","borderColor","marginVertical","borderRadius","shopSlice","categorySelected","idSelected","allProducts","Products","productsSelected","setCategorySelected","filter","product","setIdSelected","_shopSlice$actions","item","useWindowDimensions","navigate","Card","textCategory","counterSlice","increment","decrement","incrementByAmount","reset","_counterSlice$actions","_useState","useState","_useState2","_slicedToArray","inputToAdd","setInputToAdd","count","counterReducer","container","buttonsContainer","button","buttonText","span","TextInput","placeholder","spanInput","onChangeText","padding","marginBottom","textAlign","fontFamily","_useWindowDimensions","Platform","OS","_useGetCategoriesQuer","categories","data","isLoading","isError","Counter","FlatList","keyExtractor","renderItem","CategoryItem","showsVerticalScrollIndicator","showsHorizontalScrollIndicator","contentContainerStyle","wrapper","horizontal","flatlist","gap","id","additionalStylesCard","textCategorySm","Image","resizeMode","source","uri","images","minWidth","maxWidth","onSearch","_ref$error","keyword","setKeyword","containerSm","input","FontAwesome","FontAwesome5","shopReducer","_useGetProductsByCate","products","setProducts","_useState3","_useState4","_useState5","_useState6","keywordError","setKeywordError","useEffect","productsFiltered","toLocaleLowerCase","includes","toLowerCase","Search","test","ProductItem","cartSlice","user","updatedAt","total","items","addCartItem","some","map","quantity","push","reduce","currentItem","price","Date","toLocaleString","removeCartItem","_cartSlice$actions","setProduct","orientation","setOrientation","productSelected","find","mainContainer","mainContainerLandscape","textContainer","description","Button","_objectSpread","Stack","createNativeStackNavigator","Navigator","screenOptions","header","Header","Screen","component","Home","ItemListCategory","ItemDetail","cartItem","card","text2","brand","Entypo","margin","cartReducer","CartData","_usePostCartMutation","_usePostCartMutation2","triggerPostCart","CartItem","totalContainer","flex","paddingBottom","initialRouteName","Cart","createdAt","Feather","OrderData","orderItem","OrderItem","OrderScreen","label","onChange","_ref$isSecure","isSecure","setInput","inputContainer","subtitle","secureTextEntry","fontStyle","borderBottomWidth","borderBottomColor","authApi","signUp","auth","signIn","useSignUpMutation","useSignInMutation","isValidEmail","emailInput","isAtLeastSixCharacters","setEmail","errorMail","setErrorMail","password","setPassword","_useState7","_useState8","errorPassword","setErrorPassword","_useState9","_useState10","confirmPassword","setconfirmPassword","_useState11","_useState12","errorConfirmPassword","setErrorConfirmPassword","_useSignUpMutation","_useSignUpMutation2","triggerSignUp","isSuccess","main","InputForm","SubmitButton","isValidVariableEmail","isCorrectPassword","isRepeatedPasswordCorrect","returnSecureToken","err","sub","subLink","errorEmail","setErrorEmail","_useSignInMutation","_useSignInMutation2","triggerSignIn","resultSignIn","resolve","reject","insertSession","SignupScreen","LoginScreen","_ref$title","_ref$onPress","_ref$color","cameraImage","launchCamera","launchLocation","_ref3","require","AddButton","setImage","_usePostProfileImageM","_usePostProfileImageM2","triggerSaveImage","verifyCameraPermissions","ImagePicker","requestCameraPermissionsAsync","granted","pickImage","launchCameraAsync","mediaTypes","All","allowsEditing","aspect","quality","assets","canceled","confirmImage","_ref4","status","MediaLibrary","requestPermissionsAsync","createAssetAsync","_Fragment","noPhotoContainer","marginTop","_useGetUserLocationQu","userLocationQuery","AddressItem","mapPreviewUrl","mapPreview","mapImage","setLocation","setError","setAddress","_usePostUserLocationM","_usePostUserLocationM2","triggerPostAddress","Location","requestForegroundPermissionsAsync","getCurrentPositionAsync","coords","url_reverse_geocode","fetch","json","results","formatted_address","MapPreview","locationFormatted","noLocationContainer","paddingTop","MyProfile","ImageSelector","ListAddress","LocationSelector","Tab","createBottomTabNavigator","session","rows","length","_array","SafeAreaView","NavigationContainer","headerShown","tabBarShowLabel","tabBarStyle","tabBar","ShopStack","options","tabBarIcon","focused","Fontisto","CartStack","Foundation","OrderStack","MyProfileStack","_ref5","Ionicons","AuthStack","StatusBar","currentHeight","store","configureStore","reducer","_reducer","_defineProperty","middleware","getDefaultMiddleware","concat","setupListeners","App","then","catch","_useFonts","useFonts","Provider","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","keys","every","key","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}